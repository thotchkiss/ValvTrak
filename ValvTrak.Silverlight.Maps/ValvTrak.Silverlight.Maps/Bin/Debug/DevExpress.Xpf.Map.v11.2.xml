<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Xpf.Map.v11.2</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Xpf.Map.MapDotShapeKind">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.MapDotShapeKind.Circle">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapDotShapeKind.Rectangle">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapDot">

            <summary>
                <para> [To be supplied] </para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapDot.#ctor">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDot.Location">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapDot.LocationProperty">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDot.ShapeKind">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapDot.ShapeKindProperty">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDot.Size">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapDot.SizeProperty">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.SphericalMercatorProjection">

            <summary>
                <para>A class that defines methods specific for the <a href="http://en.wikipedia.org/wiki/Mercator_projection">Spherical Mercator Projection</a>
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.SphericalMercatorProjection.#ctor">
            <summary>
                <para>Initializes a new instance of the SphericalMercatorProjection class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Map.SphericalMercatorProjection.GeoPointToMapUnit(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Converts the specified geographical point into internal map units.
</para>
            </summary>
            <param name="geoPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object containing internal map coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.SphericalMercatorProjection.MapUnitToGeoPoint(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Converts the specified map unit into the corresponding geographical point.
</para>
            </summary>
            <param name="mapUnit">
		A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates.
</returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.SphericalMercatorProjection.MaxLatitude">
            <summary>
                <para>The maximum possible latitude for this projection.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.SphericalMercatorProjection.MaxLongitude">
            <summary>
                <para>The maximum possible longitude for this projection.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.SphericalMercatorProjection.MinLatitude">
            <summary>
                <para>The minimum possible latitude for this projection.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.SphericalMercatorProjection.MinLongitude">
            <summary>
                <para>The minimum possible longitude for this projection.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapeTitleOptions">

            <summary>
                <para>Contains options that define the appearance and behavior of Shape Titles.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ShapeTitleOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ShapeTitleOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapeTitleOptions.Pattern">
            <summary>
                <para>Gets or sets a pattern that is used to construct the <see cref="P:DevExpress.Xpf.Map.ShapeTitle.Text"/> property value for each shape title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that defines the text of a shape titles.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapeTitleOptions.PatternProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapeTitleOptions.Template">
            <summary>
                <para>Gets or sets the template that defines the presentation of shape titles.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines an element's presentation.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapeTitleOptions.TemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapeTitleOptions.Visible">
            <summary>
                <para>Gets or sets a value specifying whether or not a Shape Title should be visible.
</para>
            </summary>
            <value><b>true</b> to display a shape title; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapeTitleOptions.VisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapeTitle">

            <summary>
                <para>An individual Shape Title.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ShapeTitle.#ctor">
            <summary>
                <para>Initializes a new instance of the ShapeTitle class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapeTitle.Template">
            <summary>
                <para>Gets or sets the template that defines the presentation of a shape title .
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines an element's presentation.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapeTitle.TemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapeTitle.Text">
            <summary>
                <para>Gets or sets the text displayed in a shape title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> containing the text of a shape title.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapeTitle.TextProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapeLoaderBase">

            <summary>
                <para>The base for all classes that can load shapes data.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Xpf.Map.ShapeLoaderBase.ShapesLoaded">
            <summary>
                <para>Occurs after the Shape Loader has finished loading shapes.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapefileLoader">

            <summary>
                <para>Provides functionality to load shape data from an external file in a Shapefiles format.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ShapefileLoader.#ctor">
            <summary>
                <para>Initializes a new instance of the ShapefileLoader class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapefileLoader.FileUri">
            <summary>
                <para>Gets or sets an Uri that defines location of a Shapefile with shapes data.
</para>
            </summary>
            <value>A <see cref="T:System.Uri"/> object that contains a Uri to the Shapefile.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ShapefileLoader.FileUriProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ScrollButtonsOptions">

            <summary>
                <para>Contains options that define the position and layout of the Scroll Buttons element.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ScrollButtonsOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ScrollButtonsOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.ScalePanelOptions">

            <summary>
                <para>Contains options that the define appearance and layout of the Scale Panel element.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ScalePanelOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ScalePanelOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ScalePanelOptions.ShowKilometersScale">
            <summary>
                <para>Gets or sets a value indicating whether or not the <b>Kiliometers Scale</b> should be displayed.
</para>
            </summary>
            <value><b>true</b> to show the Kilometers Scale; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ScalePanelOptions.ShowKilometersScaleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.ScalePanelOptions.ShowMilesScale">
            <summary>
                <para>Gets or sets a value indicating whether or not the <b>Miles Scale</b> should be displayed.
</para>
            </summary>
            <value><b>true</b> to show the Miles Scale; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ScalePanelOptions.ShowMilesScaleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ProjectionBase">

            <summary>
                <para>The base class for all projections used in the <see cref="T:DevExpress.Xpf.Map.MapControl"/>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ProjectionBase.GeoPointToMapUnit(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Converts the specified geographical point into internal map units.
</para>
            </summary>
            <param name="geoPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object containing internal map coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.ProjectionBase.GeoToKilometersSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in geographical points into the corresponding size in kilometers for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in kilometers.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.ProjectionBase.KilometersToGeoSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in kilometers into the corresponding size in geographical points for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in geographical points.
</returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.ProjectionBase.LatToKilometersRatio">
            <summary>
                <para>Defines the ratio of <b>1</b> latitude degree to <b>1</b> kilometer.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.ProjectionBase.LonToKilometersRatio">
            <summary>
                <para>Defines the ratio of <b>1</b> longitude degree to <b>1</b> kilometer.

</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.ProjectionBase.MapUnitToGeoPoint(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Converts the specified map unit into the corresponding geographical point.
</para>
            </summary>
            <param name="mapPoint">
		A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.ProjectionBase.OffsetX">
            <summary>
                <para>Gets or sets the horizontal offset for this projection.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the horizontal offset (in map units).

</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.ProjectionBase.OffsetY">
            <summary>
                <para>Gets or sets the vertical offset for this projection.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the vertical offset (in map units).

</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.ProjectionBase.ScaleX">
            <summary>
                <para>Gets or sets a value that defines the ratio of map units to longitude degrees (in radians).
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.ProjectionBase.ScaleY">
            <summary>
                <para>Gets or sets a value that defines the ratio of map units to latitude degrees (in radians).
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.OpenStreetMapTileSource">

            <summary>
                <para>The class that implements loading image tiles from the <b>OpenStreetMap</b> data provider.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.OpenStreetMapTileSource.GetTileByZoomLevel(System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <param name="tilePositionX">
		 [To be supplied] 
            </param>
            <param name="tilePositionY">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapTileSource.maxZoomLevel">
            <summary>
                <para>Defines the maximum allowed zoom level.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapTileSource.tileSize">
            <summary>
                <para>Defines the size of a single image tile.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.OpenStreetMapDataProvider">

            <summary>
                <para>The class that loads map images from the <a href="http://www.openstreetmap.org/">OpenStreetMap</a> data provider.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.OpenStreetMapDataProvider.#ctor">
            <summary>
                <para>Initializes a new instance of the OpenStreetMapDataProvider class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Map.OpenStreetMapDataProvider.GetMapSizeInPixels(System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.OpenStreetMapDataProvider.HybridTileUriTemplate">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapDataProvider.HybridTileUriTemplateProperty">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.OpenStreetMapDataProvider.Kind">
            <summary>
                <para>Gets or sets a value specifying the type of images to be displayed on a map.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.OpenStreetMapKind"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapDataProvider.KindProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.OpenStreetMapDataProvider.Projection">
            <summary>
                <para>Returns the projection supported by OpenStreetMapDataProvider.
</para>
            </summary>
            <value>Always <b>SphericalMercatorProjection</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.OpenStreetMapDataProvider.RoadTileUriTemplate">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapDataProvider.RoadTileUriTemplateProperty">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.NavigationElementOptions">

            <summary>
                <para>Contains options that define the position and layout for all Navigation Elements.

</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpf.Map.NavigationElementOptions.HorizontalAlignment">
            <summary>
                <para>Gets or sets a value that specifies the horizontal position of a navigation element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.NavigationElementHorizontalAlignment"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementOptions.HorizontalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.NavigationElementOptions.Margin">
            <summary>
                <para>Gets or sets a value that specifies margins for a navigation element.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that stores element margins.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementOptions.MarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.NavigationElementOptions.VerticalAlignment">
            <summary>
                <para>Gets or sets a value that specifies the vertical position of a navigation element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.NavigationElementVerticalAlignment"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementOptions.VerticalAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.NavigationElementOptions.Visible">
            <summary>
                <para>Gets or sets a value indicating whether or not the navigation element should be displayed.
</para>
            </summary>
            <value><b>true</b> to display the navigation element; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementOptions.VisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapTileSourceBase">

            <summary>
                <para>The base for all classes that can load image tiles from external map data providers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapTileSourceBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="imageWidth">
		 [To be supplied] 
            </param>
            <param name="imageHeight">
		 [To be supplied] 
            </param>
            <param name="tileWidth">
		 [To be supplied] 
            </param>
            <param name="tileHeight">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapTileSourceBase.GetTileByZoomLevel(System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <param name="tilePositionX">
		 [To be supplied] 
            </param>
            <param name="tilePositionY">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapShape">

            <summary>
                <para>The class used to draw a shape on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapShape.#ctor">
            <summary>
                <para>Initializes a new instance of the MapShape class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.Fill">
            <summary>
                <para>Gets or sets the brush that specifies how the shape's interior is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.FillProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.HighlightFill">
            <summary>
                <para>Gets or sets the brush that specifies how the highlighted shape's interior is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> that describes how the highlighted shape's interior is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.HighlightFillProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.HighlightStroke">
            <summary>
                <para>Gets or sets the Brush that specifies how the highlighted shape outline is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> value that specifies how the highlighted shape outline is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.HighlightStrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.HighlightStrokeStyle">
            <summary>
                <para>Gets or sets the settings of the highlighted shape outline.


</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.StrokeStyle"/> object that stores settings of a highlighted shape outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.HighlightStrokeStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.Stroke">
            <summary>
                <para>Gets or sets the Brush that specifies how the shape outline is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> value that specifies how the shape outline is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.StrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.StrokeStyle">
            <summary>
                <para>Gets or sets the settings of the shape outline.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.StrokeStyle"/> object that stores settings of a shape outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.StrokeStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.Template">
            <summary>
                <para>Gets or sets the template that defines the presentation of the shape's content.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines an element's presentation.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.TemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.Title">
            <summary>
                <para>Provides access to the object that contains settings of a Shape Title.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ShapeTitle"/> object that contains settings of a shape title.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapShape.TitleOptions">
            <summary>
                <para>Provides presentation and visibility options for the Title of the current shape.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ShapeTitleOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.TitleOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapShape.TitleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapRectangle">

            <summary>
                <para>The class used to draw a rectangle on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapRectangle.#ctor">
            <summary>
                <para>Initializes a new instance of the MapRectangle class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapRectangle.Height">
            <summary>
                <para>Gets or sets the height of the rectangle.

</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the height of the rectangle.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapRectangle.HeightProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapRectangle.Location">
            <summary>
                <para>Gets or sets a location of the rectangle on a map.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates of the rectangle location.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapRectangle.LocationProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapRectangle.RadiusX">
            <summary>
                <para>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value, which specifies the x-axis radius of the ellipse that is used to round the corners of the rectangle.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapRectangle.RadiusXProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapRectangle.RadiusY">
            <summary>
                <para>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value, which specifies the y-axis radius of the ellipse that is used to round the corners of the rectangle.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapRectangle.RadiusYProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapRectangle.Width">
            <summary>
                <para>Gets or sets the width of the rectangle.

</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the width of the rectangle.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapRectangle.WidthProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapPolyline">

            <summary>
                <para>The class used to draw a polyline on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapPolyline.#ctor">
            <summary>
                <para>Initializes a new instance of the MapPolyline class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapPolyline.FillRule">
            <summary>
                <para>Gets or sets a value that specifies how the interior fill of the shape is determined.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.FillRule"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapPolyline.FillRuleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapPolyline.Points">
            <summary>
                <para>Gets or sets a collection that contains the vertex points of the polyline.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPointCollection"/> object that contains the vertex points of the polyline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapPolyline.PointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapPolygon">

            <summary>
                <para>The class used to draw a polygon on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapPolygon.#ctor">
            <summary>
                <para>Initializes a new instance of the MapPolygon class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapPolygon.FillRule">
            <summary>
                <para>Gets or sets a value that specifies how the interior fill of the shape is determined.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.FillRule"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapPolygon.FillRuleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapPolygon.Points">
            <summary>
                <para>Gets or sets a collection that contains the vertex points of the polygon.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPointCollection"/> object that contains the vertex points of the polygon.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapPolygon.PointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapPath">

            <summary>
                <para>The class used to draw a path on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapPath.#ctor">
            <summary>
                <para>Initializes a new instance of the MapPath class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapPath.Data">
            <summary>
                <para>Gets or sets a geometry that specifies the shape to be drawn.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapGeometry"/> object that contains a description of the shape to be drawn.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapPath.DataProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapLine">

            <summary>
                <para>The class used to draw a line on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapLine.#ctor">
            <summary>
                <para>Initializes a new instance of the MapLine class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapLine.Point1">
            <summary>
                <para>Gets or sets the first coordinate of a line.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object that stores the line start.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapLine.Point1Property">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapLine.Point2">
            <summary>
                <para>Gets or sets the second coordinate of a line.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object that stores the line end.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapLine.Point2Property">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapItemCollection">

            <summary>
                <para>A collection of map items.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapItemCollection.#ctor(DevExpress.Xpf.Map.VectorLayer)">
            <summary>
                <para>Initializes a new instance of the MapItemCollection class with the specified owner.
</para>
            </summary>
            <param name="layer">
		A <see cref="T:DevExpress.Xpf.Map.VectorLayer"/> object that is the owner of this item collection.


            </param>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapItemCollection.Move(System.Int32,System.Int32)">
            <summary>
                <para>Moves a map item to another position within the collection.
</para>
            </summary>
            <param name="oldIndex">
		An integer value specifying the zero-based index of an item to be moved.

            </param>
            <param name="newIndex">
		An integer value specifying the zero-based destination index of the moved item.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapItemAttributeCollection">

            <summary>
                <para>A collection of attributes for an individual map item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapItemAttributeCollection.#ctor(DevExpress.Xpf.Map.MapItem)">
            <summary>
                <para>Initializes a new instance of the MapItemAttributeCollection class with the specified owner.
</para>
            </summary>
            <param name="mapItem">
		A <see cref="T:DevExpress.Xpf.Map.MapItem"/> class descendant that is the owner of this attribute collection.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItemAttributeCollection.Item(System.String)">
            <summary>
                <para>Provides access to individual map items in the collection by their names.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the map item to get.


            </param>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapItem"/> class descendant which is the map item with the specified name.

</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapItemAttribute">

            <summary>
                <para>An attribute that can be applied to map items.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapItemAttribute.#ctor">
            <summary>
                <para>Initializes a new instance of the MapItemAttribute class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItemAttribute.Name">
            <summary>
                <para>Gets the attribute's name.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value that specifies the attribute's name.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapItemAttribute.NameProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItemAttribute.Type">
            <summary>
                <para>Gets or sets the type of an attribute.
</para>
            </summary>
            <value>A <see cref="T:System.Type"/> value.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapItemAttribute.TypeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItemAttribute.Value">
            <summary>
                <para>Gets the attribute's value.
</para>
            </summary>
            <value>The <see cref="T:System.String"/> that specifies the attribute's value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapItemAttribute.ValueProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapItem">

            <summary>
                <para>The base class for different map items.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapItem.#ctor">
            <summary>
                <para>Initializes a new instance of the MapItem class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItem.Attributes">
            <summary>
                <para>Gets the attributes for this map item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapItemAttributeCollection"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapItem.AttributesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapItem.IsHitTestVisible">
            <summary>
                <para>Gets or sets a value that defines whether or not a map item can be returned as a hit-testing result.
 
</para>
            </summary>
            <value><b>true</b> if the map item can be shown as the result of hit testing; otherwise <b>false</b>.   

</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapItem.IsHitTestVisibleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseEnter">
            <summary>
                <para>Occurs when the mouse pointer enters the map item.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseLeave">
            <summary>
                <para>Occurs when the mouse pointer leaves the map item.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseLeftButtonDown">
            <summary>
                <para>Occurs when the left mouse button is pressed while the mouse pointer is over this element.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseLeftButtonUp">
            <summary>
                <para>Occurs when the left mouse button is released while the mouse pointer is over this element.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseMove">
            <summary>
                <para>Occurs when the mouse pointer moves while over this element.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseRightButtonDown">
            <summary>
                <para>Occurs when the right mouse button is pressed while the mouse pointer is over this element.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Map.MapItem.MouseRightButtonUp">
            <summary>
                <para>Occurs when the right mouse button is released while the mouse pointer is over this element.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapHitInfo">

            <summary>
                <para>Contains information about what is located at a specific point within the map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapHitInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the MapHitInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.CustomElement">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapCustomElement"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapCustomElement"/> object that is the custom element located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InCustomElement">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapCustomElement"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a custom element; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapDot">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapEllipse">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapEllipse"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within an ellipse; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapLine">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapLine"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a line; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapPath">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapPath"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a path; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapPolygon">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapPolygon"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a polygon; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapPolyline">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapPolyline"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a polyline; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.InMapRectangle">
            <summary>
                <para>Gets a value indicating whether the test point is within a <see cref="T:DevExpress.Xpf.Map.MapRectangle"/>.
</para>
            </summary>
            <value><b>true</b> if the test point is within a rectangle; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapDot">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapEllipse">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapEllipse"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapEllipse"/> object that is the ellipse located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapLine">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapLine"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapLine"/> object that is the line located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapPath">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapPath"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapPath"/> object that is the path located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapPolygon">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapPolygon"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapPolygon"/> object that is the polygon located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapPolyline">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapPolyline"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapPolyline"/> object that is the polyline located under the test point.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapHitInfo.MapRectangle">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Xpf.Map.MapRectangle"/> which is located under the test point.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapRectangle"/> object that is the rectangle located under the test point.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapEllipse">

            <summary>
                <para>The class used to draw an ellipse on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapEllipse.#ctor">
            <summary>
                <para>Initializes a new instance of the MapEllipse class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapEllipse.Height">
            <summary>
                <para>Gets or sets the height of the ellipse.

</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the height of the ellipse.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapEllipse.HeightProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapEllipse.Location">
            <summary>
                <para>Gets or sets a location of the ellipse on a map.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates of the ellipse location.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapEllipse.LocationProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapEllipse.Width">
            <summary>
                <para>Gets or sets the width of the ellipse.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the width of the ellipse.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapEllipse.WidthProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapElementCollection`1">

            <summary>
                <para>A collection of map elements.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapElementCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the MapElementCollection@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapElement">

            <summary>
                <para>The base class for different map elements (e.g. layers).
</para>
            </summary>

        </member>
        <member name="T:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1">

            <summary>
                <para>A base class for all collections in the DXMap Suite.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.#ctor">
            <summary>
                <para>Initializes a new instance of the MapDependencyObjectCollectionBase@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Add(DevExpress.Xpf.Map.T)">
            <summary>
                <para>Appends the specified item to the current collection.
</para>
            </summary>
            <param name="item">
		An object to append to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Clear">
            <summary>
                <para>Removes all items from the collection.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Insert(System.Int32,DevExpress.Xpf.Map.T)">
            <summary>
                <para>Adds the specified item to the collection at the specified position.
</para>
            </summary>
            <param name="index">
		A zero-based integer which specifies the position at which the item is to be inserted.

            </param>
            <param name="item">
		An item to insert into the collection.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Item(System.Int32)">
            <summary>
                <para>Provides indexed access to individual items in the collection.

</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the desired item's position within the collection. If it's negative or exceeds the last available index, an exception is raised. 

            </param>
            <value>An object that is an item at the specified position.

</value>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Move(System.Int32,System.Int32)">
            <summary>
                <para>Moves a specific item to another position within the collection.
</para>
            </summary>
            <param name="oldIndex">
		An integer value specifying the zero-based index of an item to be moved.

            </param>
            <param name="newIndex">
		An integer value specifying the zero-based destination index of the moved item.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.Remove(DevExpress.Xpf.Map.T)">
            <summary>
                <para>Removes the specified item from the collection.

</para>
            </summary>
            <param name="item">
		An item to be removed from the collection.

            </param>
            <returns><b>true</b> if the specified item was found and successfully removed from the collection; <b>false</b> if the specified item wasn't found.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollectionBase`1.RemoveAt(System.Int32)">
            <summary>
                <para>Removes an item at the specified position from the collection.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the index of the object to remove. If it's negative or exceeds the number of elements, an exception is raised.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapDependencyObjectCollection`1">

            <summary>
                <para>A base class for most collections in the DXMap Suite.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapDependencyObjectCollection`1.#ctor">
            <summary>
                <para>Initializes a new instance of the MapDependencyObjectCollection@lt;T@gt; class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapDependencyObject">

            <summary>
                <para>Enables Windows Presentation Foundation (WPF) property system services for its derived model classes.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.Xpf.Map.MapDependencyObject.PropertyChanged">
            <summary>
                <para>Occurs every time any of the MapDependencyObject class properties has changed its value.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapDataProviderBase">

            <summary>
                <para>The base class for all data providers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapDataProviderBase.GetMapSizeInPixels(System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDataProviderBase.Projection">
            <summary>
                <para>Returns the projection supported by the current map provider.
</para>
            </summary>
            <value>An object that implements an <see cref="T:DevExpress.Xpf.Map.IProjection"/> interface.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapDataProviderBase.SetTileSource(DevExpress.Xpf.Map.MapTileSourceBase)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="value">
		 [To be supplied] 
            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapDataProviderBase.TileSource">
            <summary>
                <para>Returns a tile source associated with the current data provider.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapTileSourceBase"/> class descendant that contains settings to obtain image tiles from a specific data provider.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapDataProviderBase.TileSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapCustomElement">

            <summary>
                <para>The class used to draw any custom element on a map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapCustomElement.#ctor">
            <summary>
                <para>Initializes a new instance of the MapCustomElement class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapCustomElement.Content">
            <summary>
                <para>Gets or sets the custom element's content. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> value that is the custom element's content.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapCustomElement.ContentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapCustomElement.ContentTemplate">
            <summary>
                <para>Gets or sets the template that defines the presentation of the element's content, represented by the <see cref="P:DevExpress.Xpf.Map.MapCustomElement.Content"/> property. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object, representing the template which defines the presentation of the element's content.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapCustomElement.ContentTemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapCustomElement.Location">
            <summary>
                <para>Gets or sets a location of the custom element on a map.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates of the element location.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapCustomElement.LocationProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapCustomElement.Template">
            <summary>
                <para>Gets or sets the template that defines the presentation of a custom element.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.DataTemplate"/> object that defines an element's presentation.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapCustomElement.TemplateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.VectorLayer">

            <summary>
                <para>A layer that contains vector elements (e.g. lines, circles, polygons, or elements loaded from a Shapefile).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.VectorLayer.#ctor">
            <summary>
                <para>Initializes a new instance of the VectorLayer class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ActualItems">
            <summary>
                <para>Gets the actual collection of map items.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.Xpf.Map.ActualMapItemCollection"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ActualItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.EnableHighlighting">
            <summary>
                <para>Gets or sets a value indicating whether or not highlighting is enabled for a Vector Layer elements.

</para>
            </summary>
            <value><b>true</b> to enable highlighting; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.EnableHighlightingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.HighlightShapeFill">
            <summary>
                <para>Gets or sets the brush that specifies how the highlighted shape's interior is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> that describes how the highlighted shape's interior is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.HighlightShapeFillProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.HighlightShapeStroke">
            <summary>
                <para>Gets or sets the Brush that specifies how the highlighted shape outline is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> value that specifies how the highlighted shape outline is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.HighlightShapeStrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.HighlightShapeStrokeStyle">
            <summary>
                <para>Gets or sets the settings of the highlighted shape outline.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.StrokeStyle"/> object that stores settings of a highlighted shape outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.HighlightShapeStrokeStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.InitialMapSize">
            <summary>
                <para>Gets or sets the initial size of a map displayed by this layer.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Size"/> value containing the initial map size.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.InitialMapSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.Items">
            <summary>
                <para>Provides access to the list of vector elements that are painted in this VectorLayer.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapItemCollection"/> object containing <see cref="T:DevExpress.Xpf.Map.MapItem"/> class descendants.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ItemsSource">
            <summary>
                <para>Gets or sets a collection of objects providing information to generate and initialize vector elements for the current VectorLayer object.
This is a dependency property. 
</para>
            </summary>
            <value>A source of <see cref="T:DevExpress.Xpf.Map.MapItem"/> class descendants to be visualized as vector elements.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ItemsSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.MapProjection">
            <summary>
                <para>Gets or sets the current projection used by this VectorLayer object.
</para>
            </summary>
            <value>An object implementing the <see cref="T:DevExpress.Xpf.Map.IProjection"/> interface.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.MapProjectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.VectorLayer.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ShapeFill">
            <summary>
                <para>Gets or sets the brush that specifies how the shape's interior is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ShapeFillProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ShapeLoader">
            <summary>
                <para>Gets or sets an object that loads shape data from a file into a Map control.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ShapeLoaderBase"/> class descendant that is a shape loader for a specific shape file format.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ShapeLoaderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ShapeStroke">
            <summary>
                <para>Gets or sets the Brush that specifies how the shape outline is painted.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> value that specifies how the shape outline is painted.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ShapeStrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ShapeStrokeStyle">
            <summary>
                <para>Gets or sets the settings of the shape outline.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.StrokeStyle"/> object that stores settings of a shape outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ShapeStrokeStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.VectorLayer.ShapeTitleOptions">
            <summary>
                <para>Provides presentation and visibility options for Shape Titles of the current vector layer.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ShapeTitleOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.VectorLayer.ShapeTitleOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.ViewportChangedEventHandler">

            <summary>
                <para>A method that will handle the <see cref="E:DevExpress.Xpf.Map.LayerBase.ViewportChanged"/> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ViewportChangedEventHandler.Invoke(System.Object,DevExpress.Xpf.Map.ViewportChangedEventArgs)">
            <summary>
                <para>A method that will handle the <see cref="E:DevExpress.Xpf.Map.LayerBase.ViewportChanged"/> event.

</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Xpf.Map.ViewportChangedEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.ViewportChangedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Map.LayerBase.ViewportChanged"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ViewportChangedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the ViewportChangedEventArgs class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ViewportChangedEventArgs.BottomRight">
            <summary>
                <para>Returns the bottom-right coordinate of the current viewport.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> containing information about the bottom-right coordinate.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.ViewportChangedEventArgs.TopLeft">
            <summary>
                <para>Returns the top-left coordinate of the current viewport.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> containing information about the top-left coordinate.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.ViewportChangedEventArgs.ZoomLevel">
            <summary>
                <para>Returns the current zoom level of a viewport.
</para>
            </summary>
            <value>An integer value specifying the current zoom level.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.ZoomTrackbarOptions">

            <summary>
                <para>Contains options that define the position and layout of the Zoom Trackbar element.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ZoomTrackbarOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ZoomTrackbarOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ZoomTrackbarOptions.Orientation">
            <summary>
                <para>Gets or sets the zoom trackbar's orientation. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapZoomTrackbarOrientation"/> enumeration value that specifies the zoom trackbar's orientation.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ZoomTrackbarOptions.OrientationProperty">
            <summary>
                <para>Identifies the  dependency property. 
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.LayerCollection">

            <summary>
                <para>A collection of layers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.LayerCollection.#ctor(DevExpress.Xpf.Map.MapControl)">
            <summary>
                <para>Initializes a new instance of the LayerCollection class with the specified owner.
</para>
            </summary>
            <param name="map">
		A <see cref="T:DevExpress.Xpf.Map.MapControl"/> object that is the owner of this layer collection.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.LayerBase">

            <summary>
                <para>Serves as the base class for all layers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.#ctor">
            <summary>
                <para>Initializes a new instance of the LayerBase class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.AllowDrop">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Background">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.BorderBrush">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.BorderThickness">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Bounds">
            <summary>
                <para>Gets or sets the bounds of the map layer.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPointCollection"/> object containing a collection of points that define the bounds of the layer.


</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.LayerBase.BoundsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.FlowDirection">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.GeoPointToMapUnit(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Converts the specified geographical point into internal map units.
</para>
            </summary>
            <param name="point">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object containing internal map coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.GeoToKilometersSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in geographical points into the corresponding size in kilometers for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in kilometers.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.GeoToScreenPoint(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Converts the specified geographical point into the point on a screen.
</para>
            </summary>
            <param name="point">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Point"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Height">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.HorizontalAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.HorizontalContentAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.IsEnabled">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.IsHitTestVisible">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.IsTabStop">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.KilometersToGeoSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in kilometers into the corresponding size in geographical points for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in geographical points.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.MapUnitToGeoPoint(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Converts the specified map unit into the corresponding geographical point.
</para>
            </summary>
            <param name="unit">
		A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.MapUnitToScreenPoint(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Converts the specified map unit into the point on a screen.
</para>
            </summary>
            <param name="mapUnit">
		A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Point"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Margin">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MaxHeight">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MaxWidth">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MaxZoomLevel">
            <summary>
                <para>Gets or sets the maximum allowed zoom level for this layer.
</para>
            </summary>
            <value>An integer value specifying the maximum zoom level.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.LayerBase.MaxZoomLevelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MinHeight">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MinWidth">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.MinZoomLevel">
            <summary>
                <para>Gets or sets the minimum allowed zoom level for this layer.
</para>
            </summary>
            <value>An integer value specifying the minimum zoom level.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.LayerBase.MinZoomLevelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Padding">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.RenderSize">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.RenderTransform">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.RenderTransformOrigin">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.ScreenPointToMapUnit(System.Windows.Point)">
            <summary>
                <para>Converts the specified screen point into internal map units.
</para>
            </summary>
            <param name="point">
		A <see cref="T:System.Windows.Point"/> value to be converted.


            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object containing internal map coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.LayerBase.ScreenToGeoPoint(System.Windows.Point)">
            <summary>
                <para>Converts the specified screen point into the corresponding geographical point.
</para>
            </summary>
            <param name="point">
		A <see cref="T:System.Windows.Point"/> value to be converted.


            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.TabIndex">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.UseLayoutRounding">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.UseSprings">
            <summary>
                <para>Gets or sets a value that indicates whether the layer uses spring animations.
</para>
            </summary>
            <value><b>true</b> to if the layer uses spring animations; otherwise, <b>false</b>.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.LayerBase.UseSpringsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.VerticalAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.VerticalContentAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="E:DevExpress.Xpf.Map.LayerBase.ViewportChanged">
            <summary>
                <para>Occurs every time the current viewport is changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.LayerBase.Width">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="T:DevExpress.Xpf.Map.ImageTilesLayer">

            <summary>
                <para>A layer that displays image tiles obtained from one of the supported map providers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ImageTilesLayer.#ctor">
            <summary>
                <para>Initializes a new instance of the ImageTilesLayer class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ImageTilesLayer.DataProvider">
            <summary>
                <para>Provides access to an object that obtains map data from online data providers
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.MapDataProviderBase"/> class descendant that is a specific data provider.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.ImageTilesLayer.DataProviderProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.ImageTilesLayer.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.GeoPointCollection">

            <summary>
                <para>A collection of geo points.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPointCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the GeoPointCollection class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPointCollection.Parse(System.String)">
            <summary>
                <para>Converts the string representation of a collection to its GeoPointCollection equivalent.
</para>
            </summary>
            <param name="source">
		A string containing collection item coordinates, separated by commas.

            </param>
            <returns>A GeoPointCollection object that is equivalent to the specified string.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPointCollection.ToString(System.IFormatProvider)">
            <summary>
                <para>Returns the textual representation of GeoPointCollection.
</para>
            </summary>
            <param name="provider">
		An object, implementing the <see cref="T:System.IFormatProvider"/> interface.

            </param>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of GeoPointCollection.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPointCollection.ToString">
            <summary>
                <para>Returns the textual representation of GeoPointCollection.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of GeoPointCollection.
</returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.IProjection">

            <summary>
                <para>If implemented by a class, provides methods required for a <see cref="T:DevExpress.Xpf.Map.MapControl"/> to operate with a map projection.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.IProjection.GeoPointToMapUnit(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Converts the specified geographical point into internal map units.
</para>
            </summary>
            <param name="geoPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object containing internal map coordinates.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.IProjection.GeoToKilometersSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in geographical points into the corresponding size in kilometers for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in kilometers.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.IProjection.KilometersToGeoSize(DevExpress.Xpf.Map.GeoPoint,System.Windows.Size)">
            <summary>
                <para>Converts the specified size in kilometers into the corresponding size in geographical points for the specified anchor point.
</para>
            </summary>
            <param name="anchorPoint">
		A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates for which it is necessary to convert the size.

            </param>
            <param name="size">
		A <see cref="T:System.Windows.Size"/> value specifying the size to be converted.

            </param>
            <returns>A <see cref="T:System.Windows.Size"/> in geographical points.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.IProjection.MapUnitToGeoPoint(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Converts the specified map unit into the corresponding geographical point.
</para>
            </summary>
            <param name="mapUnit">
		A <see cref="T:DevExpress.Xpf.Map.MapUnit"/> object to be converted.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object containing geographical coordinates.
</returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapUnit">

            <summary>
                <para>A class that contains a location in internal map units.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.#ctor(System.Double,System.Double)">
            <summary>
                <para>Initializes a new instance of the MapUnit class with the specified qualitative argument and numerical value.

</para>
            </summary>
            <param name="x">
		A <see cref="T:System.Double"/> value which specifies the X position of the map unit. This value is assigned to the <see cref="P:DevExpress.Xpf.Map.MapUnit.X"/> property.

            </param>
            <param name="y">
		A <see cref="T:System.Double"/> value which specifies the Y position of the map unit. This value is assigned to the <see cref="P:DevExpress.Xpf.Map.MapUnit.Y"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current MapUnit instance.
</para>
            </summary>
            <param name="o">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current MapUnit instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.Equals(DevExpress.Xpf.Map.MapUnit,DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Determines whether the two specified MapUnit objects are equal.
</para>
            </summary>
            <param name="unit1">
		A MapUnit instance that specifies the first map unit to compare.

            </param>
            <param name="unit2">
		A MapUnit instance that specifies the second map unit to compare.

            </param>
            <returns><b>true</b> if specified objects are equal; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current MapUnit object.

</para>
            </summary>
            <returns>An integer value that is the hash code for the current object.

</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.Normalize(DevExpress.Xpf.Map.MapUnit)">
            <summary>
                <para>Normalizes the specified map unit's coordinates to the range from <b>0</b> to <b>1</b>.

</para>
            </summary>
            <param name="mapUnit">
		A non-normalized MapUnit object.

            </param>
            <returns>A normalized MapUnit object.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.Parse(System.String)">
            <summary>
                <para>Converts the string representation of a map unit to its MapUnit equivalent.
</para>
            </summary>
            <param name="source">
		A string containing map unit coordinates, separated by a comma.

            </param>
            <returns>A MapUnit object that is equivalent to the specified string.

</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.ToString">
            <summary>
                <para>Returns the textual representation of MapUnit.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of MapUnit.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapUnit.ToString(System.IFormatProvider)">
            <summary>
                <para>Returns the textual representation of MapUnit.
</para>
            </summary>
            <param name="provider">
		An object, implementing the <see cref="T:System.IFormatProvider"/> interface.

            </param>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of MapUnit.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapUnit.X">
            <summary>
                <para>A horizontal coordinate of a MapUnit.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapUnit.Y">
            <summary>
                <para>A vertical coordinate of a MapUnit.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.GeoPoint">

            <summary>
                <para>A geographical point on the map.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.#ctor(System.Double,System.Double)">
            <summary>
                <para>Initializes a new instance of the GeoPoint class with the specified latitude and longitude.

</para>
            </summary>
            <param name="latitude">
		A <see cref="T:System.Double"/> value which specifies the latitude of the geographical point. This value is assigned to the <see cref="P:DevExpress.Xpf.Map.GeoPoint.Latitude"/> property.

            </param>
            <param name="longitude">
		A <see cref="T:System.Double"/> value which specifies the longitude of the geographical point. This value is assigned to the <see cref="P:DevExpress.Xpf.Map.GeoPoint.Longitude"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.GeoPoint.Empty">
            <summary>
                <para>Returns a GeoPoint object whose coordinates are not initialized.
</para>
            </summary>
            <value>An empty <see cref="T:DevExpress.Xpf.Map.GeoPoint"/>.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.Equals(System.Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current GeoPoint instance.
</para>
            </summary>
            <param name="o">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current GeoPoint instance; otherwise <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.Equals(DevExpress.Xpf.Map.GeoPoint,DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Determines whether the two specified GeoPoint objects are equal.
</para>
            </summary>
            <param name="point1">
		A GeoPoint instance that specifies the first geographical point to compare.

            </param>
            <param name="point2">
		A GeoPoint instance that specifies the second geographical point to compare.

            </param>
            <returns><b>true</b> if specified objects are equal; otherwise <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current GeoPoint object.

</para>
            </summary>
            <returns>An integer value that is the hash code for the current object.

</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.GeoPoint.IsEmpty">
            <summary>
                <para>Gets a value that indicates whether this GeoPoint object's coordinates are initialized.
</para>
            </summary>
            <value><b>true</b> if the GeoPoint object is empty; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.GeoPoint.Latitude">
            <summary>
                <para>Gets or sets a latitude value for the current geographical coordinate.

</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that is the latitude for this <see cref="T:DevExpress.Xpf.Map.GeoPoint"/>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.GeoPoint.Longitude">
            <summary>
                <para>Gets or sets a longitude value for the current geographical coordinate.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value that is the longitude for this <see cref="T:DevExpress.Xpf.Map.GeoPoint"/>.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.Normalize(DevExpress.Xpf.Map.GeoPoint)">
            <summary>
                <para>Normalizes the specified geographical point's coordinates.


latitude -90 to 90 - cut
longitude -180 to 180 - circulated
</para>
            </summary>
            <param name="geoPoint">
		A non-normalized GeoPoint object.

            </param>
            <returns>A normalized GeoPoint object.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.Parse(System.String)">
            <summary>
                <para>Converts the string representation of a geographical point to its GeoPoint equivalent.
</para>
            </summary>
            <param name="source">
		A string containing geographical coordinates, separated by a comma.

            </param>
            <returns>A GeoPoint object that is equivalent to the specified string.

</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.ToString(System.IFormatProvider)">
            <summary>
                <para>Returns the textual representation of GeoPoint.
</para>
            </summary>
            <param name="provider">
		An object, implementing the <see cref="T:System.IFormatProvider"/> interface.

            </param>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of GeoPoint.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.GeoPoint.ToString">
            <summary>
                <para>Returns the textual representation of GeoPoint.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value, which is the textual representation of GeoPoint.
</returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.CoordinatesPanelOptions">

            <summary>
                <para>Contains options that define the position and layout of the Coordinates Panel element.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.CoordinatesPanelOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the CoordinatesPanelOptions class with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.BingMapTileSource">

            <summary>
                <para>The class that implements loading image tiles from the <b>Bing Maps</b> data provider.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.BingMapTileSource.GetTileByZoomLevel(System.Int32,System.Int32,System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <param name="tilePositionX">
		 [To be supplied] 
            </param>
            <param name="tilePositionY">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.BingMapDataProvider">

            <summary>
                <para>The class that loads map images from the <a href="http://www.bing.com/maps/">Bing Maps</a> data provider.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.BingMapDataProvider.#ctor">
            <summary>
                <para>Initializes a new instance of the BingMapDataProvider class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.BingMapDataProvider.BingKey">
            <summary>
                <para>Get or sets the key that is required to connect to the <b>Bing Maps</b> data provider.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> that stores a Bing Maps key.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.BingMapDataProvider.BingKeyProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.BingMapDataProvider.GetMapSizeInPixels(System.Int32)">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <param name="zoomLevel">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.BingMapDataProvider.Kind">
            <summary>
                <para>Gets or sets a value specifying the type of images to be displayed on a map.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.BingMapKind"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.BingMapDataProvider.KindProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.BingMapDataProvider.Projection">
            <summary>
                <para>Returns the projection supported by BingMapDataProvider.
</para>
            </summary>
            <value>Always <b>SphericalMercatorProjection</b>.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.ActualMapItemCollection">

            <summary>
                <para>A collection of actual map items.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ActualMapItemCollection.#ctor(DevExpress.Xpf.Map.VectorLayer)">
            <summary>
                <para>Initializes a new instance of the ActualMapItemCollection class with the specified owner.
</para>
            </summary>
            <param name="layer">
		A <see cref="T:DevExpress.Xpf.Map.VectorLayer"/> object that is the owner of this item collection.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.NavigationElementVerticalAlignment">

            <summary>
                <para>Lists the values used to specify the vertical alignment of map navigation elements (e.g. Zoom Trackbar, Scroll Buttons, etc.).

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementVerticalAlignment.Bottom">
            <summary>
                <para>A navigation element is docked to the bottom edge of the map.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementVerticalAlignment.Center">
            <summary>
                <para>A navigation element is vertically aligned in the center of the map.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementVerticalAlignment.Top">
            <summary>
                <para>A navigation element is docked to the top edge of the map.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.NavigationElementHorizontalAlignment">

            <summary>
                <para>Lists the values used to specify the horizontal alignment of map navigation elements (e.g. Zoom Trackbar, Scroll Buttons, etc.).

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementHorizontalAlignment.Center">
            <summary>
                <para>A navigation element is horizontally aligned to the center of the map.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementHorizontalAlignment.Left">
            <summary>
                <para>A navigation element is docked to the left edge of the map.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.NavigationElementHorizontalAlignment.Right">
            <summary>
                <para>A navigation element is docked to the right edge of the map.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapZoomTrackbarOrientation">

            <summary>
                <para>Lists the values used to specify the orientation of the Zoom Trackbar.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.MapZoomTrackbarOrientation.Horizontal">
            <summary>
                <para>The Zoom Trackbar is painted from the left to the right.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapZoomTrackbarOrientation.Vertical">
            <summary>
                <para>The Zoom Trackbar is painted from the top to the bottom.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapesLoadedEventHandler">

            <summary>
                <para>A method that will handle the <see cref="E:DevExpress.Xpf.Map.ShapeLoaderBase.ShapesLoaded"/> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ShapesLoadedEventHandler.Invoke(System.Object,DevExpress.Xpf.Map.ShapesLoadedEventArgs)">
            <summary>
                <para>A method that will handle the <see cref="E:DevExpress.Xpf.Map.ShapeLoaderBase.ShapesLoaded"/> event.

</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Xpf.Map.ShapesLoadedEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Xpf.Map.ShapesLoadedEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Xpf.Map.ShapeLoaderBase.ShapesLoaded"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.ShapesLoadedEventArgs.#ctor">
            <summary>
                <para>Initializes a new instance of the ShapesLoadedEventArgs class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.ShapesLoadedEventArgs.Shapes">
            <summary>
                <para>Provides access to the collection of shapes loaded before the <see cref="P:DevExpress.Xpf.Map.VectorLayer.ShapeLoader"/> event has occurred.
</para>
            </summary>
            <value>A list of <see cref="T:DevExpress.Xpf.Map.MapShape"/> objects.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Map.MapControl">

            <summary>
                <para>A Map control, which is the main component of the DXMap Suite for WPF.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.#ctor">
            <summary>
                <para>Initializes a new instance of the MapControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ActualCoordinatesPanelOptions">
            <summary>
                <para>Gets the actual value for the Coordinates Panel options of the MapControl object.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.CoordinatesPanelOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ActualCoordinatesPanelOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ActualScalePanelOptions">
            <summary>
                <para>Gets an actual value for the Scale Panel options of the MapControl object.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ScalePanelOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ActualScalePanelOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ActualScrollButtonsOptions">
            <summary>
                <para>Gets the actual value for the Scroll Buttons options of the MapControl object.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ScrollButtonsOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ActualScrollButtonsOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ActualZoomTrackbarOptions">
            <summary>
                <para>Gets the actual value for the Zoom Trackbar options of the MapControl object.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ZoomTrackbarOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ActualZoomTrackbarOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.CalcHitInfo(System.Windows.Point)">
            <summary>
                <para>Returns information on the map elements located at the specified point.

</para>
            </summary>
            <param name="point">
		A <see cref="T:System.Drawing.Point"/> structure which specifies the test point coordinates relative to the map's top-left corner.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Map.MapHitInfo"/> object, which contains information about the map elements located at the test point.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.CanScroll(System.Windows.Point)">
            <summary>
                <para>Checks whether or not it is possible to scroll a map by the specified offset.
</para>
            </summary>
            <param name="offset">
		A <see cref="T:System.Windows.Point"/> value specifying the offset by which a map should be scrolled.

            </param>
            <returns><b>true</b> if it is allowed to scroll; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.CanZoom(System.Int32)">
            <summary>
                <para>Checks whether or not it is possible to zoom a map to the specified zoom level.
</para>
            </summary>
            <param name="zoomLevel">
		An integer value specifying the level to zoom a map.

            </param>
            <returns><b>true</b> if it is allowed to zoom; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.CenterPoint">
            <summary>
                <para>Gets or sets a point that should be placed at the map center.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.GeoPoint"/> object that specifies the map center in geographical coordinates.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.CenterPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.CoordinatesPanelOptions">
            <summary>
                <para>Provides position and visibility options for the Coordinates Panel UI element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.CoordinatesPanelOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.CoordinatesPanelOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.EnableScrolling">
            <summary>
                <para>Gets or sets a value indicating whether or not scrolling is enabled.
</para>
            </summary>
            <value><b>true</b> if scrolling is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.EnableScrollingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.EnableZooming">
            <summary>
                <para>Gets or sets a value indicating whether or not zooming is enabled.
</para>
            </summary>
            <value><b>true</b> if zooming is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.EnableZoomingProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.HorizontalContentAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.Layers">
            <summary>
                <para>Provides access to the collection of layers to be displayed within the MapControl.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.LayerCollection"/> object containing map layers.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.LayersProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ScalePanelOptions">
            <summary>
                <para>Provides position and visibility options for the Scale Panel UI element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ScalePanelOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ScalePanelOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.Scroll(System.Windows.Point)">
            <summary>
                <para>Scrolls a map by the specified offset.
</para>
            </summary>
            <param name="offset">
		A <see cref="T:System.Windows.Point"/> value specifying the offset by which a map should be scrolled.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ScrollButtonsOptions">
            <summary>
                <para>Provides position and visibility options for the Scroll Buttons UI element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ScrollButtonsOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ScrollButtonsOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ScrollCommand">
            <summary>
                <para>Returns a command that scrolls a map.
</para>
            </summary>
            <value>An object that defines a command implementing the <see cref="T:System.Windows.Input.ICommand"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.VerticalContentAlignment">
            <summary>
                <para> [To be supplied] </para>
            </summary>
            <value> [To be supplied] </value>


        </member>
        <member name="M:DevExpress.Xpf.Map.MapControl.Zoom(System.Int32)">
            <summary>
                <para>Zooms a map to the specified level.
</para>
            </summary>
            <param name="zoomLevel">
		An integer value specifying the level to which a map should be zoomed.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ZoomCommand">
            <summary>
                <para>Returns a command that zooms a map.
</para>
            </summary>
            <value>An object that defines a command implementing the <see cref="T:System.Windows.Input.ICommand"/> interface.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ZoomLevel">
            <summary>
                <para>Gets or sets the current zoom level of a Map Control.
</para>
            </summary>
            <value>An integer value specifying the current zoom level.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ZoomLevelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Xpf.Map.MapControl.ZoomTrackbarOptions">
            <summary>
                <para>Provides layout, position and visibility options for the Zoom Trackbar UI element.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Map.ZoomTrackbarOptions"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Map.MapControl.ZoomTrackbarOptionsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="T:DevExpress.Xpf.Map.BingMapKind">

            <summary>
                <para>Lists the values used to specify the kind of maps to be obtained from the <see cref="T:DevExpress.Xpf.Map.BingMapDataProvider"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.BingMapKind.Area">
            <summary>
                <para>The map shows photo images of the Earth's surface.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.BingMapKind.Hybrid">
            <summary>
                <para>The map shows a combination of Earth images and road schemas.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.BingMapKind.Road">
            <summary>
                <para>The map shows road schemas.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Map.OpenStreetMapKind">

            <summary>
                <para>Lists the values used to specify the kind of maps to be obtained from the <see cref="T:DevExpress.Xpf.Map.OpenStreetMapDataProvider"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapKind.Hybrid">
            <summary>
                <para>The map shows a combination of Earth images and road schemas.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Map.OpenStreetMapKind.Road">
            <summary>
                <para>The map shows road schemas.
</para>
            </summary>


        </member>
    </members>
</doc>
