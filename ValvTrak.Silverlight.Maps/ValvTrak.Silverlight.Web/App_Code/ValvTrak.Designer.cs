//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ClientLocations_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Client), "ClientLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ClientLocation), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ClientLocation), "ClientLocationServiceSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ClientLocationServiceSchedule), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_ClientLocations", "ClientLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ClientLocation), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ServiceItems_ClientLocations", "ClientLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.ClientLocation), "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ServiceItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_JobTypes", "JobTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.JobType), "ClientLocationServiceSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ClientLocationServiceSchedule), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ServiceInterval), "ClientLocationServiceSchedules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ClientLocationServiceSchedule), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_DeliveryMethods", "DeliveryMethods", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.DeliveryMethod), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecordItems_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "GreasingRecordItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecordItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "GreasingRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecord), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees_ModifiedBy", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "GreasingRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecord), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_Employees1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_Employees2", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.Employee), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_Employees3", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_Employees4", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_Employees1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_Employees2", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "WellSafetyTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.WellSafetyTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees_CreatedBy", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Employee), "WellSafetyTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.WellSafetyTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecordItems_GreasingRecords", "GreasingRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.GreasingRecord), "GreasingRecordItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecordItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecordItems_ServiceItems", "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ServiceItem), "GreasingRecordItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecordItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_GreasingRecords_Jobs", "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.Job), "GreasingRecords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.GreasingRecord), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_JobStatus", "JobStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.JobStatus), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_Jobs_JobTypes", "JobTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.JobType), "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.Job), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_Jobs", "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.Job), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_WellSafetyTests_Jobs", "Jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.Job), "WellSafetyTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.WellSafetyTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_Lists", "Lists", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.List), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ManufacturerModels_Manufacturers", "Manufacturers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.Manufacturer), "ManufacturerModels", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ManufacturerModel), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ServiceItems_ManufacturerModels", "ManufacturerModels", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.ManufacturerModel), "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ServiceItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ServiceItems_Manufacturers", "Manufacturers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.Manufacturer), "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ServiceItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ServiceItemCategory), "ServiceItemTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ServiceItemType), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ValvTrak.Model.ServiceItemType), "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ServiceItem), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_ValveTests_ServiceItems", "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ServiceItem), "ValveTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.ValveTest), true)]
[assembly: EdmRelationshipAttribute("ValvTrak.Model", "FK_WellSafetyTests_ServiceItems", "ServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ValvTrak.Model.ServiceItem), "WellSafetyTests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ValvTrak.Model.WellSafetyTest), true)]

#endregion

namespace ValvTrak.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ValvTrakEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ValvTrakEntities object using the connection string found in the 'ValvTrakEntities' section of the application configuration file.
        /// </summary>
        public ValvTrakEntities() : base("name=ValvTrakEntities", "ValvTrakEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ValvTrakEntities object.
        /// </summary>
        public ValvTrakEntities(string connectionString) : base(connectionString, "ValvTrakEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ValvTrakEntities object.
        /// </summary>
        public ValvTrakEntities(EntityConnection connection) : base(connection, "ValvTrakEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientLocation> ClientLocations
        {
            get
            {
                if ((_ClientLocations == null))
                {
                    _ClientLocations = base.CreateObjectSet<ClientLocation>("ClientLocations");
                }
                return _ClientLocations;
            }
        }
        private ObjectSet<ClientLocation> _ClientLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientLocationServiceSchedule> ClientLocationServiceSchedules
        {
            get
            {
                if ((_ClientLocationServiceSchedules == null))
                {
                    _ClientLocationServiceSchedules = base.CreateObjectSet<ClientLocationServiceSchedule>("ClientLocationServiceSchedules");
                }
                return _ClientLocationServiceSchedules;
            }
        }
        private ObjectSet<ClientLocationServiceSchedule> _ClientLocationServiceSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeliveryMethod> DeliveryMethods
        {
            get
            {
                if ((_DeliveryMethods == null))
                {
                    _DeliveryMethods = base.CreateObjectSet<DeliveryMethod>("DeliveryMethods");
                }
                return _DeliveryMethods;
            }
        }
        private ObjectSet<DeliveryMethod> _DeliveryMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreasingRecordItem> GreasingRecordItems
        {
            get
            {
                if ((_GreasingRecordItems == null))
                {
                    _GreasingRecordItems = base.CreateObjectSet<GreasingRecordItem>("GreasingRecordItems");
                }
                return _GreasingRecordItems;
            }
        }
        private ObjectSet<GreasingRecordItem> _GreasingRecordItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreasingRecord> GreasingRecords
        {
            get
            {
                if ((_GreasingRecords == null))
                {
                    _GreasingRecords = base.CreateObjectSet<GreasingRecord>("GreasingRecords");
                }
                return _GreasingRecords;
            }
        }
        private ObjectSet<GreasingRecord> _GreasingRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobStatus> JobStatuses
        {
            get
            {
                if ((_JobStatuses == null))
                {
                    _JobStatuses = base.CreateObjectSet<JobStatus>("JobStatuses");
                }
                return _JobStatuses;
            }
        }
        private ObjectSet<JobStatus> _JobStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobType> JobTypes
        {
            get
            {
                if ((_JobTypes == null))
                {
                    _JobTypes = base.CreateObjectSet<JobType>("JobTypes");
                }
                return _JobTypes;
            }
        }
        private ObjectSet<JobType> _JobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> Lists
        {
            get
            {
                if ((_Lists == null))
                {
                    _Lists = base.CreateObjectSet<List>("Lists");
                }
                return _Lists;
            }
        }
        private ObjectSet<List> _Lists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManufacturerModel> ManufacturerModels
        {
            get
            {
                if ((_ManufacturerModels == null))
                {
                    _ManufacturerModels = base.CreateObjectSet<ManufacturerModel>("ManufacturerModels");
                }
                return _ManufacturerModels;
            }
        }
        private ObjectSet<ManufacturerModel> _ManufacturerModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceInterval> ServiceIntervals
        {
            get
            {
                if ((_ServiceIntervals == null))
                {
                    _ServiceIntervals = base.CreateObjectSet<ServiceInterval>("ServiceIntervals");
                }
                return _ServiceIntervals;
            }
        }
        private ObjectSet<ServiceInterval> _ServiceIntervals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceItemCategory> ServiceItemCategories
        {
            get
            {
                if ((_ServiceItemCategories == null))
                {
                    _ServiceItemCategories = base.CreateObjectSet<ServiceItemCategory>("ServiceItemCategories");
                }
                return _ServiceItemCategories;
            }
        }
        private ObjectSet<ServiceItemCategory> _ServiceItemCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceItem> ServiceItems
        {
            get
            {
                if ((_ServiceItems == null))
                {
                    _ServiceItems = base.CreateObjectSet<ServiceItem>("ServiceItems");
                }
                return _ServiceItems;
            }
        }
        private ObjectSet<ServiceItem> _ServiceItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceItemType> ServiceItemTypes
        {
            get
            {
                if ((_ServiceItemTypes == null))
                {
                    _ServiceItemTypes = base.CreateObjectSet<ServiceItemType>("ServiceItemTypes");
                }
                return _ServiceItemTypes;
            }
        }
        private ObjectSet<ServiceItemType> _ServiceItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ValveTest> ValveTests
        {
            get
            {
                if ((_ValveTests == null))
                {
                    _ValveTests = base.CreateObjectSet<ValveTest>("ValveTests");
                }
                return _ValveTests;
            }
        }
        private ObjectSet<ValveTest> _ValveTests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WellSafetyTest> WellSafetyTests
        {
            get
            {
                if ((_WellSafetyTests == null))
                {
                    _WellSafetyTests = base.CreateObjectSet<WellSafetyTest>("WellSafetyTests");
                }
                return _WellSafetyTests;
            }
        }
        private ObjectSet<WellSafetyTest> _WellSafetyTests;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientLocations(ClientLocation clientLocation)
        {
            base.AddObject("ClientLocations", clientLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientLocationServiceSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientLocationServiceSchedules(ClientLocationServiceSchedule clientLocationServiceSchedule)
        {
            base.AddObject("ClientLocationServiceSchedules", clientLocationServiceSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeliveryMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeliveryMethods(DeliveryMethod deliveryMethod)
        {
            base.AddObject("DeliveryMethods", deliveryMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreasingRecordItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreasingRecordItems(GreasingRecordItem greasingRecordItem)
        {
            base.AddObject("GreasingRecordItems", greasingRecordItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreasingRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreasingRecords(GreasingRecord greasingRecord)
        {
            base.AddObject("GreasingRecords", greasingRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobStatuses(JobStatus jobStatus)
        {
            base.AddObject("JobStatuses", jobStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobTypes(JobType jobType)
        {
            base.AddObject("JobTypes", jobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLists(List list)
        {
            base.AddObject("Lists", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManufacturerModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturerModels(ManufacturerModel manufacturerModel)
        {
            base.AddObject("ManufacturerModels", manufacturerModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceIntervals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceIntervals(ServiceInterval serviceInterval)
        {
            base.AddObject("ServiceIntervals", serviceInterval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceItemCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceItemCategories(ServiceItemCategory serviceItemCategory)
        {
            base.AddObject("ServiceItemCategories", serviceItemCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceItems(ServiceItem serviceItem)
        {
            base.AddObject("ServiceItems", serviceItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceItemTypes(ServiceItemType serviceItemType)
        {
            base.AddObject("ServiceItemTypes", serviceItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ValveTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValveTests(ValveTest valveTest)
        {
            base.AddObject("ValveTests", valveTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WellSafetyTests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWellSafetyTests(WellSafetyTest wellSafetyTest)
        {
            base.AddObject("WellSafetyTests", wellSafetyTest);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="parentID">Initial value of the ParentID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Client CreateClient(global::System.Int32 clientID, global::System.String name, global::System.String address, global::System.String city, global::System.String state, global::System.Boolean active, global::System.Int32 parentID, global::System.Byte[] version)
        {
            Client client = new Client();
            client.ClientID = clientID;
            client.Name = name;
            client.Address = address;
            client.City = city;
            client.State = state;
            client.Active = active;
            client.ParentID = parentID;
            client.Version = version;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysProNumber
        {
            get
            {
                return _SysProNumber;
            }
            set
            {
                OnSysProNumberChanging(value);
                ReportPropertyChanging("SysProNumber");
                _SysProNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysProNumber");
                OnSysProNumberChanged();
            }
        }
        private global::System.String _SysProNumber;
        partial void OnSysProNumberChanging(global::System.String value);
        partial void OnSysProNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.Int32 _ParentID;
        partial void OnParentIDChanging(global::System.Int32 value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocations_Clients", "ClientLocations")]
        public EntityCollection<ClientLocation> ClientLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientLocation>("ValvTrak.Model.FK_ClientLocations_Clients", "ClientLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientLocation>("ValvTrak.Model.FK_ClientLocations_Clients", "ClientLocations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ClientLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientLocation object.
        /// </summary>
        /// <param name="clientLocationID">Initial value of the ClientLocationID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ClientLocation CreateClientLocation(global::System.Int32 clientLocationID, global::System.Boolean active, global::System.DateTime creationDate, global::System.Byte[] version)
        {
            ClientLocation clientLocation = new ClientLocation();
            clientLocation.ClientLocationID = clientLocationID;
            clientLocation.Active = active;
            clientLocation.CreationDate = creationDate;
            clientLocation.Version = version;
            return clientLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientLocationID
        {
            get
            {
                return _ClientLocationID;
            }
            set
            {
                if (_ClientLocationID != value)
                {
                    OnClientLocationIDChanging(value);
                    ReportPropertyChanging("ClientLocationID");
                    _ClientLocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientLocationID");
                    OnClientLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientLocationID;
        partial void OnClientLocationIDChanging(global::System.Int32 value);
        partial void OnClientLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientLocationTypeID
        {
            get
            {
                return _ClientLocationTypeID;
            }
            set
            {
                OnClientLocationTypeIDChanging(value);
                ReportPropertyChanging("ClientLocationTypeID");
                _ClientLocationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientLocationTypeID");
                OnClientLocationTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientLocationTypeID;
        partial void OnClientLocationTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientLocationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyNumber
        {
            get
            {
                return _PropertyNumber;
            }
            set
            {
                OnPropertyNumberChanging(value);
                ReportPropertyChanging("PropertyNumber");
                _PropertyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PropertyNumber");
                OnPropertyNumberChanged();
            }
        }
        private global::System.String _PropertyNumber;
        partial void OnPropertyNumberChanging(global::System.String value);
        partial void OnPropertyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.String _Longitude;
        partial void OnLongitudeChanging(global::System.String value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.String _Latitude;
        partial void OnLatitudeChanging(global::System.String value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ServiceDate
        {
            get
            {
                return _ServiceDate;
            }
            set
            {
                OnServiceDateChanging(value);
                ReportPropertyChanging("ServiceDate");
                _ServiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceDate");
                OnServiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ServiceDate;
        partial void OnServiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocations_Clients", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ValvTrak.Model.FK_ClientLocations_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ValvTrak.Model.FK_ClientLocations_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("ValvTrak.Model.FK_ClientLocations_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("ValvTrak.Model.FK_ClientLocations_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocationServiceSchedules")]
        public EntityCollection<ClientLocationServiceSchedule> ClientLocationServiceSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocationServiceSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocationServiceSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_ClientLocations", "Jobs")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_ClientLocations", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_ClientLocations", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ClientLocations", "ServiceItems")]
        public EntityCollection<ServiceItem> ServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ClientLocationServiceSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientLocationServiceSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientLocationServiceSchedule object.
        /// </summary>
        /// <param name="clientLocationServiceScheduleId">Initial value of the ClientLocationServiceScheduleId property.</param>
        /// <param name="clientLocationId">Initial value of the ClientLocationId property.</param>
        /// <param name="jobTypeId">Initial value of the JobTypeId property.</param>
        /// <param name="serviceIntervalId">Initial value of the ServiceIntervalId property.</param>
        /// <param name="lastServiceDate">Initial value of the LastServiceDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ClientLocationServiceSchedule CreateClientLocationServiceSchedule(global::System.Int32 clientLocationServiceScheduleId, global::System.Int32 clientLocationId, global::System.Int32 jobTypeId, global::System.Int32 serviceIntervalId, global::System.DateTime lastServiceDate, global::System.Byte[] version)
        {
            ClientLocationServiceSchedule clientLocationServiceSchedule = new ClientLocationServiceSchedule();
            clientLocationServiceSchedule.ClientLocationServiceScheduleId = clientLocationServiceScheduleId;
            clientLocationServiceSchedule.ClientLocationId = clientLocationId;
            clientLocationServiceSchedule.JobTypeId = jobTypeId;
            clientLocationServiceSchedule.ServiceIntervalId = serviceIntervalId;
            clientLocationServiceSchedule.LastServiceDate = lastServiceDate;
            clientLocationServiceSchedule.Version = version;
            return clientLocationServiceSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientLocationServiceScheduleId
        {
            get
            {
                return _ClientLocationServiceScheduleId;
            }
            set
            {
                if (_ClientLocationServiceScheduleId != value)
                {
                    OnClientLocationServiceScheduleIdChanging(value);
                    ReportPropertyChanging("ClientLocationServiceScheduleId");
                    _ClientLocationServiceScheduleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientLocationServiceScheduleId");
                    OnClientLocationServiceScheduleIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientLocationServiceScheduleId;
        partial void OnClientLocationServiceScheduleIdChanging(global::System.Int32 value);
        partial void OnClientLocationServiceScheduleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientLocationId
        {
            get
            {
                return _ClientLocationId;
            }
            set
            {
                OnClientLocationIdChanging(value);
                ReportPropertyChanging("ClientLocationId");
                _ClientLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientLocationId");
                OnClientLocationIdChanged();
            }
        }
        private global::System.Int32 _ClientLocationId;
        partial void OnClientLocationIdChanging(global::System.Int32 value);
        partial void OnClientLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeId
        {
            get
            {
                return _JobTypeId;
            }
            set
            {
                OnJobTypeIdChanging(value);
                ReportPropertyChanging("JobTypeId");
                _JobTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeId");
                OnJobTypeIdChanged();
            }
        }
        private global::System.Int32 _JobTypeId;
        partial void OnJobTypeIdChanging(global::System.Int32 value);
        partial void OnJobTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceIntervalId
        {
            get
            {
                return _ServiceIntervalId;
            }
            set
            {
                OnServiceIntervalIdChanging(value);
                ReportPropertyChanging("ServiceIntervalId");
                _ServiceIntervalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceIntervalId");
                OnServiceIntervalIdChanged();
            }
        }
        private global::System.Int32 _ServiceIntervalId;
        partial void OnServiceIntervalIdChanging(global::System.Int32 value);
        partial void OnServiceIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastServiceDate
        {
            get
            {
                return _LastServiceDate;
            }
            set
            {
                OnLastServiceDateChanging(value);
                ReportPropertyChanging("LastServiceDate");
                _LastServiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastServiceDate");
                OnLastServiceDateChanged();
            }
        }
        private global::System.DateTime _LastServiceDate;
        partial void OnLastServiceDateChanging(global::System.DateTime value);
        partial void OnLastServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NextServiceDate
        {
            get
            {
                return _NextServiceDate;
            }
            set
            {
                OnNextServiceDateChanging(value);
                ReportPropertyChanging("NextServiceDate");
                _NextServiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NextServiceDate");
                OnNextServiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NextServiceDate;
        partial void OnNextServiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNextServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountDown
        {
            get
            {
                return _CountDown;
            }
            set
            {
                OnCountDownChanging(value);
                ReportPropertyChanging("CountDown");
                _CountDown = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountDown");
                OnCountDownChanged();
            }
        }
        private Nullable<global::System.Int32> _CountDown;
        partial void OnCountDownChanging(Nullable<global::System.Int32> value);
        partial void OnCountDownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations")]
        public ClientLocation ClientLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientLocation> ClientLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientLocation>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ClientLocations", "ClientLocations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_JobTypes", "JobTypes")]
        public JobType JobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "JobTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "JobTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobType> JobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "JobTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobType>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "JobTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals")]
        public ServiceInterval ServiceInterval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceInterval>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceInterval>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceInterval> ServiceIntervalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceInterval>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceInterval>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ServiceIntervals", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="DeliveryMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeliveryMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeliveryMethod object.
        /// </summary>
        /// <param name="deliveryMethodID">Initial value of the DeliveryMethodID property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        public static DeliveryMethod CreateDeliveryMethod(global::System.Int32 deliveryMethodID, global::System.String method)
        {
            DeliveryMethod deliveryMethod = new DeliveryMethod();
            deliveryMethod.DeliveryMethodID = deliveryMethodID;
            deliveryMethod.Method = method;
            return deliveryMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeliveryMethodID
        {
            get
            {
                return _DeliveryMethodID;
            }
            set
            {
                if (_DeliveryMethodID != value)
                {
                    OnDeliveryMethodIDChanging(value);
                    ReportPropertyChanging("DeliveryMethodID");
                    _DeliveryMethodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeliveryMethodID");
                    OnDeliveryMethodIDChanged();
                }
            }
        }
        private global::System.Int32 _DeliveryMethodID;
        partial void OnDeliveryMethodIDChanging(global::System.Int32 value);
        partial void OnDeliveryMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_DeliveryMethods", "Jobs")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "Jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="eFC_LocationID">Initial value of the EFC_LocationID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String firstName, global::System.String lastName, global::System.Int32 eFC_LocationID, global::System.Boolean active, global::System.Byte[] version)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.EFC_LocationID = eFC_LocationID;
            employee.Active = active;
            employee.Version = version;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPhone
        {
            get
            {
                return _WorkPhone;
            }
            set
            {
                OnWorkPhoneChanging(value);
                ReportPropertyChanging("WorkPhone");
                _WorkPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkPhone");
                OnWorkPhoneChanged();
            }
        }
        private global::System.String _WorkPhone;
        partial void OnWorkPhoneChanging(global::System.String value);
        partial void OnWorkPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EFC_LocationID
        {
            get
            {
                return _EFC_LocationID;
            }
            set
            {
                OnEFC_LocationIDChanging(value);
                ReportPropertyChanging("EFC_LocationID");
                _EFC_LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFC_LocationID");
                OnEFC_LocationIDChanged();
            }
        }
        private global::System.Int32 _EFC_LocationID;
        partial void OnEFC_LocationIDChanging(global::System.Int32 value);
        partial void OnEFC_LocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_Employees", "GreasingRecordItems")]
        public EntityCollection<GreasingRecordItem> GreasingRecordItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "GreasingRecordItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "GreasingRecordItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees", "GreasingRecords")]
        public EntityCollection<GreasingRecord> GreasingRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Employees", "GreasingRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Employees", "GreasingRecords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees_ModifiedBy", "GreasingRecords")]
        public EntityCollection<GreasingRecord> GreasingRecords1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "GreasingRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "GreasingRecords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees", "Jobs")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees1", "Jobs")]
        public EntityCollection<Job> Jobs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees1", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees1", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees2", "Jobs")]
        public EntityCollection<Job> Jobs2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees2", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees2", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees3", "Jobs")]
        public EntityCollection<Job> Jobs3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees3", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees3", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees4", "Jobs")]
        public EntityCollection<Job> Jobs4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees4", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_Employees4", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees", "ValveTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees1", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees1", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees1", "ValveTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees2", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees2", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Employees2", "ValveTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees", "WellSafetyTests")]
        public EntityCollection<WellSafetyTest> WellSafetyTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Employees", "WellSafetyTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Employees", "WellSafetyTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees_CreatedBy", "WellSafetyTests")]
        public EntityCollection<WellSafetyTest> WellSafetyTests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "WellSafetyTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "WellSafetyTests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="GreasingRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreasingRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreasingRecord object.
        /// </summary>
        /// <param name="greasingRecordID">Initial value of the GreasingRecordID property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static GreasingRecord CreateGreasingRecord(global::System.Int32 greasingRecordID, global::System.Int32 jobID, global::System.Byte[] version)
        {
            GreasingRecord greasingRecord = new GreasingRecord();
            greasingRecord.GreasingRecordID = greasingRecordID;
            greasingRecord.JobID = jobID;
            greasingRecord.Version = version;
            return greasingRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GreasingRecordID
        {
            get
            {
                return _GreasingRecordID;
            }
            set
            {
                if (_GreasingRecordID != value)
                {
                    OnGreasingRecordIDChanging(value);
                    ReportPropertyChanging("GreasingRecordID");
                    _GreasingRecordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GreasingRecordID");
                    OnGreasingRecordIDChanged();
                }
            }
        }
        private global::System.Int32 _GreasingRecordID;
        partial void OnGreasingRecordIDChanging(global::System.Int32 value);
        partial void OnGreasingRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientFieldOffice
        {
            get
            {
                return _ClientFieldOffice;
            }
            set
            {
                OnClientFieldOfficeChanging(value);
                ReportPropertyChanging("ClientFieldOffice");
                _ClientFieldOffice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientFieldOffice");
                OnClientFieldOfficeChanged();
            }
        }
        private global::System.String _ClientFieldOffice;
        partial void OnClientFieldOfficeChanging(global::System.String value);
        partial void OnClientFieldOfficeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PipelineSegment
        {
            get
            {
                return _PipelineSegment;
            }
            set
            {
                OnPipelineSegmentChanging(value);
                ReportPropertyChanging("PipelineSegment");
                _PipelineSegment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PipelineSegment");
                OnPipelineSegmentChanged();
            }
        }
        private global::System.String _PipelineSegment;
        partial void OnPipelineSegmentChanging(global::System.String value);
        partial void OnPipelineSegmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Field
        {
            get
            {
                return _Field;
            }
            set
            {
                OnFieldChanging(value);
                ReportPropertyChanging("Field");
                _Field = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Field");
                OnFieldChanged();
            }
        }
        private global::System.String _Field;
        partial void OnFieldChanging(global::System.String value);
        partial void OnFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SapPSV
        {
            get
            {
                return _SapPSV;
            }
            set
            {
                OnSapPSVChanging(value);
                ReportPropertyChanging("SapPSV");
                _SapPSV = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SapPSV");
                OnSapPSVChanged();
            }
        }
        private global::System.String _SapPSV;
        partial void OnSapPSVChanging(global::System.String value);
        partial void OnSapPSVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSRNum
        {
            get
            {
                return _FSRNum;
            }
            set
            {
                OnFSRNumChanging(value);
                ReportPropertyChanging("FSRNum");
                _FSRNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSRNum");
                OnFSRNumChanged();
            }
        }
        private global::System.String _FSRNum;
        partial void OnFSRNumChanging(global::System.String value);
        partial void OnFSRNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Employees_ModifiedBy", "Employees")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecords_Employees_ModifiedBy", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_GreasingRecords", "GreasingRecordItems")]
        public EntityCollection<GreasingRecordItem> GreasingRecordItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecordItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecordItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Jobs", "Jobs")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_GreasingRecords_Jobs", "Jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_GreasingRecords_Jobs", "Jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_GreasingRecords_Jobs", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("ValvTrak.Model.FK_GreasingRecords_Jobs", "Jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="GreasingRecordItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreasingRecordItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreasingRecordItem object.
        /// </summary>
        /// <param name="greasingRecordItemID">Initial value of the GreasingRecordItemID property.</param>
        /// <param name="greasingRecordID">Initial value of the GreasingRecordID property.</param>
        /// <param name="serviceItemID">Initial value of the ServiceItemID property.</param>
        /// <param name="amountInjected">Initial value of the AmountInjected property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static GreasingRecordItem CreateGreasingRecordItem(global::System.Int32 greasingRecordItemID, global::System.Int32 greasingRecordID, global::System.Int32 serviceItemID, global::System.Double amountInjected, global::System.Byte[] version)
        {
            GreasingRecordItem greasingRecordItem = new GreasingRecordItem();
            greasingRecordItem.GreasingRecordItemID = greasingRecordItemID;
            greasingRecordItem.GreasingRecordID = greasingRecordID;
            greasingRecordItem.ServiceItemID = serviceItemID;
            greasingRecordItem.AmountInjected = amountInjected;
            greasingRecordItem.Version = version;
            return greasingRecordItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GreasingRecordItemID
        {
            get
            {
                return _GreasingRecordItemID;
            }
            set
            {
                if (_GreasingRecordItemID != value)
                {
                    OnGreasingRecordItemIDChanging(value);
                    ReportPropertyChanging("GreasingRecordItemID");
                    _GreasingRecordItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GreasingRecordItemID");
                    OnGreasingRecordItemIDChanged();
                }
            }
        }
        private global::System.Int32 _GreasingRecordItemID;
        partial void OnGreasingRecordItemIDChanging(global::System.Int32 value);
        partial void OnGreasingRecordItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GreasingRecordID
        {
            get
            {
                return _GreasingRecordID;
            }
            set
            {
                OnGreasingRecordIDChanging(value);
                ReportPropertyChanging("GreasingRecordID");
                _GreasingRecordID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GreasingRecordID");
                OnGreasingRecordIDChanged();
            }
        }
        private global::System.Int32 _GreasingRecordID;
        partial void OnGreasingRecordIDChanging(global::System.Int32 value);
        partial void OnGreasingRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemID
        {
            get
            {
                return _ServiceItemID;
            }
            set
            {
                OnServiceItemIDChanging(value);
                ReportPropertyChanging("ServiceItemID");
                _ServiceItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceItemID");
                OnServiceItemIDChanged();
            }
        }
        private global::System.Int32 _ServiceItemID;
        partial void OnServiceItemIDChanging(global::System.Int32 value);
        partial void OnServiceItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValveLocation
        {
            get
            {
                return _ValveLocation;
            }
            set
            {
                OnValveLocationChanging(value);
                ReportPropertyChanging("ValveLocation");
                _ValveLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValveLocation");
                OnValveLocationChanged();
            }
        }
        private global::System.String _ValveLocation;
        partial void OnValveLocationChanging(global::System.String value);
        partial void OnValveLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActuatorInspected
        {
            get
            {
                return _ActuatorInspected;
            }
            set
            {
                OnActuatorInspectedChanging(value);
                ReportPropertyChanging("ActuatorInspected");
                _ActuatorInspected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActuatorInspected");
                OnActuatorInspectedChanged();
            }
        }
        private Nullable<global::System.Int32> _ActuatorInspected;
        partial void OnActuatorInspectedChanging(Nullable<global::System.Int32> value);
        partial void OnActuatorInspectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActuatorLubed
        {
            get
            {
                return _ActuatorLubed;
            }
            set
            {
                OnActuatorLubedChanging(value);
                ReportPropertyChanging("ActuatorLubed");
                _ActuatorLubed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActuatorLubed");
                OnActuatorLubedChanged();
            }
        }
        private Nullable<global::System.Int32> _ActuatorLubed;
        partial void OnActuatorLubedChanging(Nullable<global::System.Int32> value);
        partial void OnActuatorLubedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PercentCycled
        {
            get
            {
                return _PercentCycled;
            }
            set
            {
                OnPercentCycledChanging(value);
                ReportPropertyChanging("PercentCycled");
                _PercentCycled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentCycled");
                OnPercentCycledChanged();
            }
        }
        private Nullable<global::System.Int32> _PercentCycled;
        partial void OnPercentCycledChanging(Nullable<global::System.Int32> value);
        partial void OnPercentCycledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ValveSecured
        {
            get
            {
                return _ValveSecured;
            }
            set
            {
                OnValveSecuredChanging(value);
                ReportPropertyChanging("ValveSecured");
                _ValveSecured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValveSecured");
                OnValveSecuredChanged();
            }
        }
        private Nullable<global::System.Int32> _ValveSecured;
        partial void OnValveSecuredChanging(Nullable<global::System.Int32> value);
        partial void OnValveSecuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FlangeOrScrew
        {
            get
            {
                return _FlangeOrScrew;
            }
            set
            {
                OnFlangeOrScrewChanging(value);
                ReportPropertyChanging("FlangeOrScrew");
                _FlangeOrScrew = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FlangeOrScrew");
                OnFlangeOrScrewChanged();
            }
        }
        private global::System.String _FlangeOrScrew;
        partial void OnFlangeOrScrewChanging(global::System.String value);
        partial void OnFlangeOrScrewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EaseOfOperation
        {
            get
            {
                return _EaseOfOperation;
            }
            set
            {
                OnEaseOfOperationChanging(value);
                ReportPropertyChanging("EaseOfOperation");
                _EaseOfOperation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EaseOfOperation");
                OnEaseOfOperationChanged();
            }
        }
        private Nullable<global::System.Int32> _EaseOfOperation;
        partial void OnEaseOfOperationChanging(Nullable<global::System.Int32> value);
        partial void OnEaseOfOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeatsChecked
        {
            get
            {
                return _SeatsChecked;
            }
            set
            {
                OnSeatsCheckedChanging(value);
                ReportPropertyChanging("SeatsChecked");
                _SeatsChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeatsChecked");
                OnSeatsCheckedChanged();
            }
        }
        private Nullable<global::System.Int32> _SeatsChecked;
        partial void OnSeatsCheckedChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeatsLubed
        {
            get
            {
                return _SeatsLubed;
            }
            set
            {
                OnSeatsLubedChanging(value);
                ReportPropertyChanging("SeatsLubed");
                _SeatsLubed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeatsLubed");
                OnSeatsLubedChanged();
            }
        }
        private Nullable<global::System.Int32> _SeatsLubed;
        partial void OnSeatsLubedChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsLubedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Leaking
        {
            get
            {
                return _Leaking;
            }
            set
            {
                OnLeakingChanging(value);
                ReportPropertyChanging("Leaking");
                _Leaking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Leaking");
                OnLeakingChanged();
            }
        }
        private Nullable<global::System.Int32> _Leaking;
        partial void OnLeakingChanging(Nullable<global::System.Int32> value);
        partial void OnLeakingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LubeTypeID
        {
            get
            {
                return _LubeTypeID;
            }
            set
            {
                OnLubeTypeIDChanging(value);
                ReportPropertyChanging("LubeTypeID");
                _LubeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LubeTypeID");
                OnLubeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LubeTypeID;
        partial void OnLubeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnLubeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AmountInjected
        {
            get
            {
                return _AmountInjected;
            }
            set
            {
                OnAmountInjectedChanging(value);
                ReportPropertyChanging("AmountInjected");
                _AmountInjected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountInjected");
                OnAmountInjectedChanged();
            }
        }
        private global::System.Double _AmountInjected;
        partial void OnAmountInjectedChanging(global::System.Double value);
        partial void OnAmountInjectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_Employees", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_GreasingRecordItems_Employees", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_GreasingRecords", "GreasingRecords")]
        public GreasingRecord GreasingRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreasingRecord>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreasingRecord>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreasingRecord> GreasingRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreasingRecord>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreasingRecord>("ValvTrak.Model.FK_GreasingRecordItems_GreasingRecords", "GreasingRecords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_ServiceItems", "ServiceItems")]
        public ServiceItem ServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "ServiceItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "ServiceItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItem> ServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="clientLocationID">Initial value of the ClientLocationID property.</param>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="assignedByID">Initial value of the AssignedByID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Job CreateJob(global::System.Int32 jobID, global::System.Int32 jobTypeID, global::System.Int32 clientLocationID, global::System.Int32 jobStatusID, global::System.Int32 assignedByID, global::System.Boolean active, global::System.DateTime creationDate, global::System.Byte[] version)
        {
            Job job = new Job();
            job.JobID = jobID;
            job.JobTypeID = jobTypeID;
            job.ClientLocationID = clientLocationID;
            job.JobStatusID = jobStatusID;
            job.AssignedByID = assignedByID;
            job.Active = active;
            job.CreationDate = creationDate;
            job.Version = version;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                if (_JobID != value)
                {
                    OnJobIDChanging(value);
                    ReportPropertyChanging("JobID");
                    _JobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobID");
                    OnJobIDChanged();
                }
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalesOrderNum
        {
            get
            {
                return _SalesOrderNum;
            }
            set
            {
                OnSalesOrderNumChanging(value);
                ReportPropertyChanging("SalesOrderNum");
                _SalesOrderNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalesOrderNum");
                OnSalesOrderNumChanged();
            }
        }
        private global::System.String _SalesOrderNum;
        partial void OnSalesOrderNumChanging(global::System.String value);
        partial void OnSalesOrderNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CallDate
        {
            get
            {
                return _CallDate;
            }
            set
            {
                OnCallDateChanging(value);
                ReportPropertyChanging("CallDate");
                _CallDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CallDate");
                OnCallDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CallDate;
        partial void OnCallDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestedByID
        {
            get
            {
                return _RequestedByID;
            }
            set
            {
                OnRequestedByIDChanging(value);
                ReportPropertyChanging("RequestedByID");
                _RequestedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedByID");
                OnRequestedByIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestedByID;
        partial void OnRequestedByIDChanging(Nullable<global::System.Int32> value);
        partial void OnRequestedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                OnJobTypeIDChanging(value);
                ReportPropertyChanging("JobTypeID");
                _JobTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeID");
                OnJobTypeIDChanged();
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientLocationID
        {
            get
            {
                return _ClientLocationID;
            }
            set
            {
                OnClientLocationIDChanging(value);
                ReportPropertyChanging("ClientLocationID");
                _ClientLocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientLocationID");
                OnClientLocationIDChanged();
            }
        }
        private global::System.Int32 _ClientLocationID;
        partial void OnClientLocationIDChanging(global::System.Int32 value);
        partial void OnClientLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ServiceDate
        {
            get
            {
                return _ServiceDate;
            }
            set
            {
                OnServiceDateChanging(value);
                ReportPropertyChanging("ServiceDate");
                _ServiceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceDate");
                OnServiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ServiceDate;
        partial void OnServiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletionDate
        {
            get
            {
                return _CompletionDate;
            }
            set
            {
                OnCompletionDateChanging(value);
                ReportPropertyChanging("CompletionDate");
                _CompletionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletionDate");
                OnCompletionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletionDate;
        partial void OnCompletionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssignedByID
        {
            get
            {
                return _AssignedByID;
            }
            set
            {
                OnAssignedByIDChanging(value);
                ReportPropertyChanging("AssignedByID");
                _AssignedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedByID");
                OnAssignedByIDChanged();
            }
        }
        private global::System.Int32 _AssignedByID;
        partial void OnAssignedByIDChanging(global::System.Int32 value);
        partial void OnAssignedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AssignedToID
        {
            get
            {
                return _AssignedToID;
            }
            set
            {
                OnAssignedToIDChanging(value);
                ReportPropertyChanging("AssignedToID");
                _AssignedToID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedToID");
                OnAssignedToIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AssignedToID;
        partial void OnAssignedToIDChanging(Nullable<global::System.Int32> value);
        partial void OnAssignedToIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovedByID
        {
            get
            {
                return _ApprovedByID;
            }
            set
            {
                OnApprovedByIDChanging(value);
                ReportPropertyChanging("ApprovedByID");
                _ApprovedByID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedByID");
                OnApprovedByIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovedByID;
        partial void OnApprovedByIDChanging(Nullable<global::System.Int32> value);
        partial void OnApprovedByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryMethodID
        {
            get
            {
                return _DeliveryMethodID;
            }
            set
            {
                OnDeliveryMethodIDChanging(value);
                ReportPropertyChanging("DeliveryMethodID");
                _DeliveryMethodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryMethodID");
                OnDeliveryMethodIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryMethodID;
        partial void OnDeliveryMethodIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PM
        {
            get
            {
                return _PM;
            }
            set
            {
                OnPMChanging(value);
                ReportPropertyChanging("PM");
                _PM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PM");
                OnPMChanged();
            }
        }
        private Nullable<global::System.Decimal> _PM;
        partial void OnPMChanging(Nullable<global::System.Decimal> value);
        partial void OnPMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NP
        {
            get
            {
                return _NP;
            }
            set
            {
                OnNPChanging(value);
                ReportPropertyChanging("NP");
                _NP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NP");
                OnNPChanged();
            }
        }
        private Nullable<global::System.Decimal> _NP;
        partial void OnNPChanging(Nullable<global::System.Decimal> value);
        partial void OnNPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FS
        {
            get
            {
                return _FS;
            }
            set
            {
                OnFSChanging(value);
                ReportPropertyChanging("FS");
                _FS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FS");
                OnFSChanged();
            }
        }
        private Nullable<global::System.Decimal> _FS;
        partial void OnFSChanging(Nullable<global::System.Decimal> value);
        partial void OnFSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DotNumber
        {
            get
            {
                return _DotNumber;
            }
            set
            {
                OnDotNumberChanging(value);
                ReportPropertyChanging("DotNumber");
                _DotNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DotNumber");
                OnDotNumberChanged();
            }
        }
        private global::System.String _DotNumber;
        partial void OnDotNumberChanging(global::System.String value);
        partial void OnDotNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VRstamp
        {
            get
            {
                return _VRstamp;
            }
            set
            {
                OnVRstampChanging(value);
                ReportPropertyChanging("VRstamp");
                _VRstamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VRstamp");
                OnVRstampChanged();
            }
        }
        private global::System.String _VRstamp;
        partial void OnVRstampChanging(global::System.String value);
        partial void OnVRstampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SapWoNum
        {
            get
            {
                return _SapWoNum;
            }
            set
            {
                OnSapWoNumChanging(value);
                ReportPropertyChanging("SapWoNum");
                _SapWoNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SapWoNum");
                OnSapWoNumChanged();
            }
        }
        private global::System.String _SapWoNum;
        partial void OnSapWoNumChanging(global::System.String value);
        partial void OnSapWoNumChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_ClientLocations", "ClientLocations")]
        public ClientLocation ClientLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_Jobs_ClientLocations", "ClientLocations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_Jobs_ClientLocations", "ClientLocations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientLocation> ClientLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_Jobs_ClientLocations", "ClientLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientLocation>("ValvTrak.Model.FK_Jobs_ClientLocations", "ClientLocations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_DeliveryMethods", "DeliveryMethods")]
        public DeliveryMethod DeliveryMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryMethod>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "DeliveryMethods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryMethod>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "DeliveryMethods").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeliveryMethod> DeliveryMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeliveryMethod>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "DeliveryMethods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeliveryMethod>("ValvTrak.Model.FK_Jobs_DeliveryMethods", "DeliveryMethods", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees1", "Employees")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees1", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees2", "Employees")]
        public Employee Employee2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees2", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees2", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees2", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees2", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees3", "Employees")]
        public Employee Employee3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees3", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees3", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees3", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees3", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_Employees4", "Employees")]
        public Employee Employee4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees4", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees4", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees4", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_Jobs_Employees4", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecords_Jobs", "GreasingRecords")]
        public EntityCollection<GreasingRecord> GreasingRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Jobs", "GreasingRecords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecord>("ValvTrak.Model.FK_GreasingRecords_Jobs", "GreasingRecords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_JobStatus", "JobStatus")]
        public JobStatus JobStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("ValvTrak.Model.FK_Jobs_JobStatus", "JobStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("ValvTrak.Model.FK_Jobs_JobStatus", "JobStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobStatus> JobStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("ValvTrak.Model.FK_Jobs_JobStatus", "JobStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobStatus>("ValvTrak.Model.FK_Jobs_JobStatus", "JobStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_JobTypes", "JobTypes")]
        public JobType JobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_Jobs_JobTypes", "JobTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_Jobs_JobTypes", "JobTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobType> JobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("ValvTrak.Model.FK_Jobs_JobTypes", "JobTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobType>("ValvTrak.Model.FK_Jobs_JobTypes", "JobTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Jobs", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Jobs", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Jobs", "ValveTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Jobs", "WellSafetyTests")]
        public EntityCollection<WellSafetyTest> WellSafetyTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "WellSafetyTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "WellSafetyTests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="JobStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobStatus object.
        /// </summary>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static JobStatus CreateJobStatus(global::System.Int32 jobStatusID, global::System.String status, global::System.Int32 sequence)
        {
            JobStatus jobStatus = new JobStatus();
            jobStatus.JobStatusID = jobStatusID;
            jobStatus.Status = status;
            jobStatus.Sequence = sequence;
            return jobStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                if (_JobStatusID != value)
                {
                    OnJobStatusIDChanging(value);
                    ReportPropertyChanging("JobStatusID");
                    _JobStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobStatusID");
                    OnJobStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_JobStatus", "Jobs")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_JobStatus", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_JobStatus", "Jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="JobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobType object.
        /// </summary>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static JobType CreateJobType(global::System.Int32 jobTypeID, global::System.String type, global::System.Boolean enabled)
        {
            JobType jobType = new JobType();
            jobType.JobTypeID = jobTypeID;
            jobType.Type = type;
            jobType.Enabled = enabled;
            return jobType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                if (_JobTypeID != value)
                {
                    OnJobTypeIDChanging(value);
                    ReportPropertyChanging("JobTypeID");
                    _JobTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobTypeID");
                    OnJobTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_JobTypes", "ClientLocationServiceSchedules")]
        public EntityCollection<ClientLocationServiceSchedule> ClientLocationServiceSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "ClientLocationServiceSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_JobTypes", "ClientLocationServiceSchedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_Jobs_JobTypes", "Jobs")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_JobTypes", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("ValvTrak.Model.FK_Jobs_JobTypes", "Jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="listKey">Initial value of the ListKey property.</param>
        /// <param name="listValue">Initial value of the ListValue property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static List CreateList(global::System.Int32 listID, global::System.String listKey, global::System.Int32 listValue, global::System.Int32 sortOrder)
        {
            List list = new List();
            list.ListID = listID;
            list.ListKey = listKey;
            list.ListValue = listValue;
            list.SortOrder = sortOrder;
            return list;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                if (_ListID != value)
                {
                    OnListIDChanging(value);
                    ReportPropertyChanging("ListID");
                    _ListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListID");
                    OnListIDChanged();
                }
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListKey
        {
            get
            {
                return _ListKey;
            }
            set
            {
                OnListKeyChanging(value);
                ReportPropertyChanging("ListKey");
                _ListKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ListKey");
                OnListKeyChanged();
            }
        }
        private global::System.String _ListKey;
        partial void OnListKeyChanging(global::System.String value);
        partial void OnListKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListValue
        {
            get
            {
                return _ListValue;
            }
            set
            {
                OnListValueChanging(value);
                ReportPropertyChanging("ListValue");
                _ListValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListValue");
                OnListValueChanged();
            }
        }
        private global::System.Int32 _ListValue;
        partial void OnListValueChanging(global::System.Int32 value);
        partial void OnListValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Display1
        {
            get
            {
                return _Display1;
            }
            set
            {
                OnDisplay1Changing(value);
                ReportPropertyChanging("Display1");
                _Display1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Display1");
                OnDisplay1Changed();
            }
        }
        private global::System.String _Display1;
        partial void OnDisplay1Changing(global::System.String value);
        partial void OnDisplay1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Display2
        {
            get
            {
                return _Display2;
            }
            set
            {
                OnDisplay2Changing(value);
                ReportPropertyChanging("Display2");
                _Display2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Display2");
                OnDisplay2Changed();
            }
        }
        private global::System.String _Display2;
        partial void OnDisplay2Changing(global::System.String value);
        partial void OnDisplay2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abbr
        {
            get
            {
                return _Abbr;
            }
            set
            {
                OnAbbrChanging(value);
                ReportPropertyChanging("Abbr");
                _Abbr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbr");
                OnAbbrChanged();
            }
        }
        private global::System.String _Abbr;
        partial void OnAbbrChanging(global::System.String value);
        partial void OnAbbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SysCode
        {
            get
            {
                return _SysCode;
            }
            set
            {
                OnSysCodeChanging(value);
                ReportPropertyChanging("SysCode");
                _SysCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SysCode");
                OnSysCodeChanged();
            }
        }
        private global::System.String _SysCode;
        partial void OnSysCodeChanging(global::System.String value);
        partial void OnSysCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Lists", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Lists", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_Lists", "ValveTests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="manufacturer1">Initial value of the Manufacturer1 property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 manufacturerID, global::System.String manufacturer1, global::System.Boolean active, global::System.Byte[] version)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.ManufacturerID = manufacturerID;
            manufacturer.Manufacturer1 = manufacturer1;
            manufacturer.Active = active;
            manufacturer.Version = version;
            return manufacturer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                if (_ManufacturerID != value)
                {
                    OnManufacturerIDChanging(value);
                    ReportPropertyChanging("ManufacturerID");
                    _ManufacturerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerID");
                    OnManufacturerIDChanged();
                }
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Manufacturer1
        {
            get
            {
                return _Manufacturer1;
            }
            set
            {
                OnManufacturer1Changing(value);
                ReportPropertyChanging("Manufacturer1");
                _Manufacturer1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Manufacturer1");
                OnManufacturer1Changed();
            }
        }
        private global::System.String _Manufacturer1;
        partial void OnManufacturer1Changing(global::System.String value);
        partial void OnManufacturer1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ManufacturerModels_Manufacturers", "ManufacturerModels")]
        public EntityCollection<ManufacturerModel> ManufacturerModels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManufacturerModel>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "ManufacturerModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManufacturerModel>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "ManufacturerModels", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_Manufacturers", "ServiceItems")]
        public EntityCollection<ServiceItem> ServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ManufacturerModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManufacturerModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManufacturerModel object.
        /// </summary>
        /// <param name="manufacturerModelID">Initial value of the ManufacturerModelID property.</param>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ManufacturerModel CreateManufacturerModel(global::System.Int32 manufacturerModelID, global::System.Int32 manufacturerID, global::System.String model, global::System.Boolean active, global::System.Byte[] version)
        {
            ManufacturerModel manufacturerModel = new ManufacturerModel();
            manufacturerModel.ManufacturerModelID = manufacturerModelID;
            manufacturerModel.ManufacturerID = manufacturerID;
            manufacturerModel.Model = model;
            manufacturerModel.Active = active;
            manufacturerModel.Version = version;
            return manufacturerModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerModelID
        {
            get
            {
                return _ManufacturerModelID;
            }
            set
            {
                if (_ManufacturerModelID != value)
                {
                    OnManufacturerModelIDChanging(value);
                    ReportPropertyChanging("ManufacturerModelID");
                    _ManufacturerModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerModelID");
                    OnManufacturerModelIDChanged();
                }
            }
        }
        private global::System.Int32 _ManufacturerModelID;
        partial void OnManufacturerModelIDChanging(global::System.Int32 value);
        partial void OnManufacturerModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ManufacturerModels_Manufacturers", "Manufacturers")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "Manufacturers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "Manufacturers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "Manufacturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("ValvTrak.Model.FK_ManufacturerModels_Manufacturers", "Manufacturers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ManufacturerModels", "ServiceItems")]
        public EntityCollection<ServiceItem> ServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ServiceInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceInterval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceInterval object.
        /// </summary>
        /// <param name="serviceIntervalId">Initial value of the ServiceIntervalId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="years">Initial value of the Years property.</param>
        /// <param name="months">Initial value of the Months property.</param>
        /// <param name="days">Initial value of the Days property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ServiceInterval CreateServiceInterval(global::System.Int32 serviceIntervalId, global::System.String name, global::System.Int32 years, global::System.Int32 months, global::System.Int32 days, global::System.Boolean isActive, global::System.Byte[] version)
        {
            ServiceInterval serviceInterval = new ServiceInterval();
            serviceInterval.ServiceIntervalId = serviceIntervalId;
            serviceInterval.Name = name;
            serviceInterval.Years = years;
            serviceInterval.Months = months;
            serviceInterval.Days = days;
            serviceInterval.IsActive = isActive;
            serviceInterval.Version = version;
            return serviceInterval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceIntervalId
        {
            get
            {
                return _ServiceIntervalId;
            }
            set
            {
                if (_ServiceIntervalId != value)
                {
                    OnServiceIntervalIdChanging(value);
                    ReportPropertyChanging("ServiceIntervalId");
                    _ServiceIntervalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceIntervalId");
                    OnServiceIntervalIdChanged();
                }
            }
        }
        private global::System.Int32 _ServiceIntervalId;
        partial void OnServiceIntervalIdChanging(global::System.Int32 value);
        partial void OnServiceIntervalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Years
        {
            get
            {
                return _Years;
            }
            set
            {
                OnYearsChanging(value);
                ReportPropertyChanging("Years");
                _Years = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Years");
                OnYearsChanged();
            }
        }
        private global::System.Int32 _Years;
        partial void OnYearsChanging(global::System.Int32 value);
        partial void OnYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Months
        {
            get
            {
                return _Months;
            }
            set
            {
                OnMonthsChanging(value);
                ReportPropertyChanging("Months");
                _Months = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Months");
                OnMonthsChanged();
            }
        }
        private global::System.Int32 _Months;
        partial void OnMonthsChanging(global::System.Int32 value);
        partial void OnMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.Int32 _Days;
        partial void OnDaysChanging(global::System.Int32 value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ClientLocationServiceSchedules_ServiceIntervals", "ClientLocationServiceSchedules")]
        public EntityCollection<ClientLocationServiceSchedule> ClientLocationServiceSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ClientLocationServiceSchedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientLocationServiceSchedule>("ValvTrak.Model.FK_ClientLocationServiceSchedules_ServiceIntervals", "ClientLocationServiceSchedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ServiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceItem object.
        /// </summary>
        /// <param name="serviceItemID">Initial value of the ServiceItemID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ServiceItem CreateServiceItem(global::System.Int32 serviceItemID, global::System.Byte[] version)
        {
            ServiceItem serviceItem = new ServiceItem();
            serviceItem.ServiceItemID = serviceItemID;
            serviceItem.Version = version;
            return serviceItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemID
        {
            get
            {
                return _ServiceItemID;
            }
            set
            {
                if (_ServiceItemID != value)
                {
                    OnServiceItemIDChanging(value);
                    ReportPropertyChanging("ServiceItemID");
                    _ServiceItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceItemID");
                    OnServiceItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceItemID;
        partial void OnServiceItemIDChanging(global::System.Int32 value);
        partial void OnServiceItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceItemTypeID
        {
            get
            {
                return _ServiceItemTypeID;
            }
            set
            {
                OnServiceItemTypeIDChanging(value);
                ReportPropertyChanging("ServiceItemTypeID");
                _ServiceItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceItemTypeID");
                OnServiceItemTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceItemTypeID;
        partial void OnServiceItemTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientLocationID
        {
            get
            {
                return _ClientLocationID;
            }
            set
            {
                OnClientLocationIDChanging(value);
                ReportPropertyChanging("ClientLocationID");
                _ClientLocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientLocationID");
                OnClientLocationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientLocationID;
        partial void OnClientLocationIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerModelID
        {
            get
            {
                return _ManufacturerModelID;
            }
            set
            {
                OnManufacturerModelIDChanging(value);
                ReportPropertyChanging("ManufacturerModelID");
                _ManufacturerModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerModelID");
                OnManufacturerModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerModelID;
        partial void OnManufacturerModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNum
        {
            get
            {
                return _SerialNum;
            }
            set
            {
                OnSerialNumChanging(value);
                ReportPropertyChanging("SerialNum");
                _SerialNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNum");
                OnSerialNumChanged();
            }
        }
        private global::System.String _SerialNum;
        partial void OnSerialNumChanging(global::System.String value);
        partial void OnSerialNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SapEquipNum
        {
            get
            {
                return _SapEquipNum;
            }
            set
            {
                OnSapEquipNumChanging(value);
                ReportPropertyChanging("SapEquipNum");
                _SapEquipNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SapEquipNum");
                OnSapEquipNumChanged();
            }
        }
        private global::System.String _SapEquipNum;
        partial void OnSapEquipNumChanging(global::System.String value);
        partial void OnSapEquipNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Threaded
        {
            get
            {
                return _Threaded;
            }
            set
            {
                OnThreadedChanging(value);
                ReportPropertyChanging("Threaded");
                _Threaded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Threaded");
                OnThreadedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Threaded;
        partial void OnThreadedChanging(Nullable<global::System.Boolean> value);
        partial void OnThreadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Flanged
        {
            get
            {
                return _Flanged;
            }
            set
            {
                OnFlangedChanging(value);
                ReportPropertyChanging("Flanged");
                _Flanged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Flanged");
                OnFlangedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Flanged;
        partial void OnFlangedChanging(Nullable<global::System.Boolean> value);
        partial void OnFlangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InletSize
        {
            get
            {
                return _InletSize;
            }
            set
            {
                OnInletSizeChanging(value);
                ReportPropertyChanging("InletSize");
                _InletSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InletSize");
                OnInletSizeChanged();
            }
        }
        private Nullable<global::System.Decimal> _InletSize;
        partial void OnInletSizeChanging(Nullable<global::System.Decimal> value);
        partial void OnInletSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OutletSize
        {
            get
            {
                return _OutletSize;
            }
            set
            {
                OnOutletSizeChanging(value);
                ReportPropertyChanging("OutletSize");
                _OutletSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutletSize");
                OnOutletSizeChanged();
            }
        }
        private Nullable<global::System.Decimal> _OutletSize;
        partial void OnOutletSizeChanging(Nullable<global::System.Decimal> value);
        partial void OnOutletSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InletFlangeRating
        {
            get
            {
                return _InletFlangeRating;
            }
            set
            {
                OnInletFlangeRatingChanging(value);
                ReportPropertyChanging("InletFlangeRating");
                _InletFlangeRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InletFlangeRating");
                OnInletFlangeRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _InletFlangeRating;
        partial void OnInletFlangeRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnInletFlangeRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OutletFlangeRating
        {
            get
            {
                return _OutletFlangeRating;
            }
            set
            {
                OnOutletFlangeRatingChanging(value);
                ReportPropertyChanging("OutletFlangeRating");
                _OutletFlangeRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutletFlangeRating");
                OnOutletFlangeRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _OutletFlangeRating;
        partial void OnOutletFlangeRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnOutletFlangeRatingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ClientLocations", "ClientLocations")]
        public ClientLocation ClientLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ClientLocations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ClientLocations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientLocation> ClientLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientLocation>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ClientLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientLocation>("ValvTrak.Model.FK_ServiceItems_ClientLocations", "ClientLocations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_GreasingRecordItems_ServiceItems", "GreasingRecordItems")]
        public EntityCollection<GreasingRecordItem> GreasingRecordItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "GreasingRecordItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreasingRecordItem>("ValvTrak.Model.FK_GreasingRecordItems_ServiceItems", "GreasingRecordItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ManufacturerModels", "ManufacturerModels")]
        public ManufacturerModel ManufacturerModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManufacturerModel>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ManufacturerModels").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManufacturerModel>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ManufacturerModels").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManufacturerModel> ManufacturerModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManufacturerModel>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ManufacturerModels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManufacturerModel>("ValvTrak.Model.FK_ServiceItems_ManufacturerModels", "ManufacturerModels", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_Manufacturers", "Manufacturers")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "Manufacturers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "Manufacturers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "Manufacturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("ValvTrak.Model.FK_ServiceItems_Manufacturers", "Manufacturers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes")]
        public ServiceItemType ServiceItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemType>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemType>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItemType> ServiceItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemType>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItemType>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItemTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_ServiceItems", "ValveTests")]
        public EntityCollection<ValveTest> ValveTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ValveTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValveTest>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ValveTests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_ServiceItems", "WellSafetyTests")]
        public EntityCollection<WellSafetyTest> WellSafetyTests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "WellSafetyTests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WellSafetyTest>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "WellSafetyTests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ServiceItemCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceItemCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceItemCategory object.
        /// </summary>
        /// <param name="serviceItemCategoryID">Initial value of the ServiceItemCategoryID property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        public static ServiceItemCategory CreateServiceItemCategory(global::System.Int32 serviceItemCategoryID, global::System.String category)
        {
            ServiceItemCategory serviceItemCategory = new ServiceItemCategory();
            serviceItemCategory.ServiceItemCategoryID = serviceItemCategoryID;
            serviceItemCategory.Category = category;
            return serviceItemCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemCategoryID
        {
            get
            {
                return _ServiceItemCategoryID;
            }
            set
            {
                if (_ServiceItemCategoryID != value)
                {
                    OnServiceItemCategoryIDChanging(value);
                    ReportPropertyChanging("ServiceItemCategoryID");
                    _ServiceItemCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceItemCategoryID");
                    OnServiceItemCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceItemCategoryID;
        partial void OnServiceItemCategoryIDChanging(global::System.Int32 value);
        partial void OnServiceItemCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemTypes")]
        public EntityCollection<ServiceItemType> ServiceItemTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItemType>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItemType>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ServiceItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceItemType object.
        /// </summary>
        /// <param name="serviceItemTypeID">Initial value of the ServiceItemTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="serviceItemCategoryID">Initial value of the ServiceItemCategoryID property.</param>
        public static ServiceItemType CreateServiceItemType(global::System.Int32 serviceItemTypeID, global::System.String type, global::System.Int32 serviceItemCategoryID)
        {
            ServiceItemType serviceItemType = new ServiceItemType();
            serviceItemType.ServiceItemTypeID = serviceItemTypeID;
            serviceItemType.Type = type;
            serviceItemType.ServiceItemCategoryID = serviceItemCategoryID;
            return serviceItemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemTypeID
        {
            get
            {
                return _ServiceItemTypeID;
            }
            set
            {
                if (_ServiceItemTypeID != value)
                {
                    OnServiceItemTypeIDChanging(value);
                    ReportPropertyChanging("ServiceItemTypeID");
                    _ServiceItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServiceItemTypeID");
                    OnServiceItemTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceItemTypeID;
        partial void OnServiceItemTypeIDChanging(global::System.Int32 value);
        partial void OnServiceItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemCategoryID
        {
            get
            {
                return _ServiceItemCategoryID;
            }
            set
            {
                OnServiceItemCategoryIDChanging(value);
                ReportPropertyChanging("ServiceItemCategoryID");
                _ServiceItemCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceItemCategoryID");
                OnServiceItemCategoryIDChanged();
            }
        }
        private global::System.Int32 _ServiceItemCategoryID;
        partial void OnServiceItemCategoryIDChanging(global::System.Int32 value);
        partial void OnServiceItemCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories")]
        public ServiceItemCategory ServiceItemCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemCategory>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemCategory>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItemCategory> ServiceItemCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItemCategory>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItemCategory>("ValvTrak.Model.FK_ServiceItemTypes_ServiceItemCategories", "ServiceItemCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ServiceItems_ServiceItemTypes", "ServiceItems")]
        public EntityCollection<ServiceItem> ServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceItem>("ValvTrak.Model.FK_ServiceItems_ServiceItemTypes", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="ValveTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ValveTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ValveTest object.
        /// </summary>
        /// <param name="valveTestID">Initial value of the ValveTestID property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="serviceItemID">Initial value of the ServiceItemID property.</param>
        /// <param name="jsaComplete">Initial value of the JsaComplete property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static ValveTest CreateValveTest(global::System.Int32 valveTestID, global::System.Int32 jobID, global::System.Int32 serviceItemID, global::System.Boolean jsaComplete, global::System.Byte[] version)
        {
            ValveTest valveTest = new ValveTest();
            valveTest.ValveTestID = valveTestID;
            valveTest.JobID = jobID;
            valveTest.ServiceItemID = serviceItemID;
            valveTest.JsaComplete = jsaComplete;
            valveTest.Version = version;
            return valveTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ValveTestID
        {
            get
            {
                return _ValveTestID;
            }
            set
            {
                if (_ValveTestID != value)
                {
                    OnValveTestIDChanging(value);
                    ReportPropertyChanging("ValveTestID");
                    _ValveTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ValveTestID");
                    OnValveTestIDChanged();
                }
            }
        }
        private global::System.Int32 _ValveTestID;
        partial void OnValveTestIDChanging(global::System.Int32 value);
        partial void OnValveTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemID
        {
            get
            {
                return _ServiceItemID;
            }
            set
            {
                OnServiceItemIDChanging(value);
                ReportPropertyChanging("ServiceItemID");
                _ServiceItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceItemID");
                OnServiceItemIDChanged();
            }
        }
        private global::System.Int32 _ServiceItemID;
        partial void OnServiceItemIDChanging(global::System.Int32 value);
        partial void OnServiceItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSRNum
        {
            get
            {
                return _FSRNum;
            }
            set
            {
                OnFSRNumChanging(value);
                ReportPropertyChanging("FSRNum");
                _FSRNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSRNum");
                OnFSRNumChanged();
            }
        }
        private global::System.String _FSRNum;
        partial void OnFSRNumChanging(global::System.String value);
        partial void OnFSRNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTested
        {
            get
            {
                return _DateTested;
            }
            set
            {
                OnDateTestedChanging(value);
                ReportPropertyChanging("DateTested");
                _DateTested = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTested");
                OnDateTestedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTested;
        partial void OnDateTestedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SetPressure
        {
            get
            {
                return _SetPressure;
            }
            set
            {
                OnSetPressureChanging(value);
                ReportPropertyChanging("SetPressure");
                _SetPressure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetPressure");
                OnSetPressureChanged();
            }
        }
        private Nullable<global::System.Double> _SetPressure;
        partial void OnSetPressureChanging(Nullable<global::System.Double> value);
        partial void OnSetPressureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BackPressure
        {
            get
            {
                return _BackPressure;
            }
            set
            {
                OnBackPressureChanging(value);
                ReportPropertyChanging("BackPressure");
                _BackPressure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackPressure");
                OnBackPressureChanged();
            }
        }
        private Nullable<global::System.Double> _BackPressure;
        partial void OnBackPressureChanging(Nullable<global::System.Double> value);
        partial void OnBackPressureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ColdDiffPressure
        {
            get
            {
                return _ColdDiffPressure;
            }
            set
            {
                OnColdDiffPressureChanging(value);
                ReportPropertyChanging("ColdDiffPressure");
                _ColdDiffPressure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColdDiffPressure");
                OnColdDiffPressureChanged();
            }
        }
        private Nullable<global::System.Double> _ColdDiffPressure;
        partial void OnColdDiffPressureChanging(Nullable<global::System.Double> value);
        partial void OnColdDiffPressureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TempCorr
        {
            get
            {
                return _TempCorr;
            }
            set
            {
                OnTempCorrChanging(value);
                ReportPropertyChanging("TempCorr");
                _TempCorr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TempCorr");
                OnTempCorrChanged();
            }
        }
        private Nullable<global::System.Double> _TempCorr;
        partial void OnTempCorrChanging(Nullable<global::System.Double> value);
        partial void OnTempCorrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Double> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Double> value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CapacityTypeID
        {
            get
            {
                return _CapacityTypeID;
            }
            set
            {
                OnCapacityTypeIDChanging(value);
                ReportPropertyChanging("CapacityTypeID");
                _CapacityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapacityTypeID");
                OnCapacityTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CapacityTypeID;
        partial void OnCapacityTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SealNum
        {
            get
            {
                return _SealNum;
            }
            set
            {
                OnSealNumChanging(value);
                ReportPropertyChanging("SealNum");
                _SealNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SealNum");
                OnSealNumChanged();
            }
        }
        private global::System.String _SealNum;
        partial void OnSealNumChanging(global::System.String value);
        partial void OnSealNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GaugeNum
        {
            get
            {
                return _GaugeNum;
            }
            set
            {
                OnGaugeNumChanging(value);
                ReportPropertyChanging("GaugeNum");
                _GaugeNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GaugeNum");
                OnGaugeNumChanged();
            }
        }
        private global::System.String _GaugeNum;
        partial void OnGaugeNumChanging(global::System.String value);
        partial void OnGaugeNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CalibrationDue
        {
            get
            {
                return _CalibrationDue;
            }
            set
            {
                OnCalibrationDueChanging(value);
                ReportPropertyChanging("CalibrationDue");
                _CalibrationDue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalibrationDue");
                OnCalibrationDueChanged();
            }
        }
        private Nullable<global::System.DateTime> _CalibrationDue;
        partial void OnCalibrationDueChanging(Nullable<global::System.DateTime> value);
        partial void OnCalibrationDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Coded
        {
            get
            {
                return _Coded;
            }
            set
            {
                OnCodedChanging(value);
                ReportPropertyChanging("Coded");
                _Coded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coded");
                OnCodedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Coded;
        partial void OnCodedChanging(Nullable<global::System.Boolean> value);
        partial void OnCodedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValveDate
        {
            get
            {
                return _ValveDate;
            }
            set
            {
                OnValveDateChanging(value);
                ReportPropertyChanging("ValveDate");
                _ValveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValveDate");
                OnValveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValveDate;
        partial void OnValveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnValveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SetPressureFound
        {
            get
            {
                return _SetPressureFound;
            }
            set
            {
                OnSetPressureFoundChanging(value);
                ReportPropertyChanging("SetPressureFound");
                _SetPressureFound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetPressureFound");
                OnSetPressureFoundChanged();
            }
        }
        private Nullable<global::System.Decimal> _SetPressureFound;
        partial void OnSetPressureFoundChanging(Nullable<global::System.Decimal> value);
        partial void OnSetPressureFoundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SetPressureLeft
        {
            get
            {
                return _SetPressureLeft;
            }
            set
            {
                OnSetPressureLeftChanging(value);
                ReportPropertyChanging("SetPressureLeft");
                _SetPressureLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetPressureLeft");
                OnSetPressureLeftChanged();
            }
        }
        private Nullable<global::System.Decimal> _SetPressureLeft;
        partial void OnSetPressureLeftChanging(Nullable<global::System.Decimal> value);
        partial void OnSetPressureLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestResultID
        {
            get
            {
                return _TestResultID;
            }
            set
            {
                OnTestResultIDChanging(value);
                ReportPropertyChanging("TestResultID");
                _TestResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestResultID");
                OnTestResultIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TestResultID;
        partial void OnTestResultIDChanging(Nullable<global::System.Int32> value);
        partial void OnTestResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TechID
        {
            get
            {
                return _TechID;
            }
            set
            {
                OnTechIDChanging(value);
                ReportPropertyChanging("TechID");
                _TechID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TechID");
                OnTechIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TechID;
        partial void OnTechIDChanging(Nullable<global::System.Int32> value);
        partial void OnTechIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerWitness
        {
            get
            {
                return _CustomerWitness;
            }
            set
            {
                OnCustomerWitnessChanging(value);
                ReportPropertyChanging("CustomerWitness");
                _CustomerWitness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerWitness");
                OnCustomerWitnessChanged();
            }
        }
        private global::System.String _CustomerWitness;
        partial void OnCustomerWitnessChanging(global::System.String value);
        partial void OnCustomerWitnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostCenter
        {
            get
            {
                return _CostCenter;
            }
            set
            {
                OnCostCenterChanging(value);
                ReportPropertyChanging("CostCenter");
                _CostCenter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CostCenter");
                OnCostCenterChanged();
            }
        }
        private global::System.String _CostCenter;
        partial void OnCostCenterChanging(global::System.String value);
        partial void OnCostCenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PsvApplication
        {
            get
            {
                return _PsvApplication;
            }
            set
            {
                OnPsvApplicationChanging(value);
                ReportPropertyChanging("PsvApplication");
                _PsvApplication = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PsvApplication");
                OnPsvApplicationChanged();
            }
        }
        private global::System.String _PsvApplication;
        partial void OnPsvApplicationChanging(global::System.String value);
        partial void OnPsvApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsolationValve
        {
            get
            {
                return _IsolationValve;
            }
            set
            {
                OnIsolationValveChanging(value);
                ReportPropertyChanging("IsolationValve");
                _IsolationValve = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsolationValve");
                OnIsolationValveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsolationValve;
        partial void OnIsolationValveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsolationValveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReliefValveSupport
        {
            get
            {
                return _ReliefValveSupport;
            }
            set
            {
                OnReliefValveSupportChanging(value);
                ReportPropertyChanging("ReliefValveSupport");
                _ReliefValveSupport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReliefValveSupport");
                OnReliefValveSupportChanged();
            }
        }
        private Nullable<global::System.Int32> _ReliefValveSupport;
        partial void OnReliefValveSupportChanging(Nullable<global::System.Int32> value);
        partial void OnReliefValveSupportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TestPort
        {
            get
            {
                return _TestPort;
            }
            set
            {
                OnTestPortChanging(value);
                ReportPropertyChanging("TestPort");
                _TestPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestPort");
                OnTestPortChanged();
            }
        }
        private Nullable<global::System.Boolean> _TestPort;
        partial void OnTestPortChanging(Nullable<global::System.Boolean> value);
        partial void OnTestPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WeatherCap
        {
            get
            {
                return _WeatherCap;
            }
            set
            {
                OnWeatherCapChanging(value);
                ReportPropertyChanging("WeatherCap");
                _WeatherCap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeatherCap");
                OnWeatherCapChanged();
            }
        }
        private Nullable<global::System.Int32> _WeatherCap;
        partial void OnWeatherCapChanging(Nullable<global::System.Int32> value);
        partial void OnWeatherCapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DotLocation
        {
            get
            {
                return _DotLocation;
            }
            set
            {
                OnDotLocationChanging(value);
                ReportPropertyChanging("DotLocation");
                _DotLocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DotLocation");
                OnDotLocationChanged();
            }
        }
        private Nullable<global::System.Boolean> _DotLocation;
        partial void OnDotLocationChanging(Nullable<global::System.Boolean> value);
        partial void OnDotLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean JsaComplete
        {
            get
            {
                return _JsaComplete;
            }
            set
            {
                OnJsaCompleteChanging(value);
                ReportPropertyChanging("JsaComplete");
                _JsaComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JsaComplete");
                OnJsaCompleteChanged();
            }
        }
        private global::System.Boolean _JsaComplete;
        partial void OnJsaCompleteChanging(global::System.Boolean value);
        partial void OnJsaCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReviewItems
        {
            get
            {
                return _ReviewItems;
            }
            set
            {
                OnReviewItemsChanging(value);
                ReportPropertyChanging("ReviewItems");
                _ReviewItems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReviewItems");
                OnReviewItemsChanged();
            }
        }
        private global::System.String _ReviewItems;
        partial void OnReviewItemsChanging(global::System.String value);
        partial void OnReviewItemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SapPsv
        {
            get
            {
                return _SapPsv;
            }
            set
            {
                OnSapPsvChanging(value);
                ReportPropertyChanging("SapPsv");
                _SapPsv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SapPsv");
                OnSapPsvChanged();
            }
        }
        private global::System.String _SapPsv;
        partial void OnSapPsvChanging(global::System.String value);
        partial void OnSapPsvChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees1", "Employees")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees1", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees1", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees1", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees1", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Employees2", "Employees")]
        public Employee Employee2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees2", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees2", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees2", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_ValveTests_Employees2", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Jobs", "Jobs")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_ValveTests_Jobs", "Jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_ValveTests_Jobs", "Jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_ValveTests_Jobs", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("ValvTrak.Model.FK_ValveTests_Jobs", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_Lists", "Lists")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ValvTrak.Model.FK_ValveTests_Lists", "Lists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ValvTrak.Model.FK_ValveTests_Lists", "Lists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ValvTrak.Model.FK_ValveTests_Lists", "Lists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("ValvTrak.Model.FK_ValveTests_Lists", "Lists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_ValveTests_ServiceItems", "ServiceItems")]
        public ServiceItem ServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ServiceItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ServiceItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItem> ServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItem>("ValvTrak.Model.FK_ValveTests_ServiceItems", "ServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ValvTrak.Model", Name="WellSafetyTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WellSafetyTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WellSafetyTest object.
        /// </summary>
        /// <param name="wellSafetyTestID">Initial value of the WellSafetyTestID property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="serviceItemID">Initial value of the ServiceItemID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static WellSafetyTest CreateWellSafetyTest(global::System.Int32 wellSafetyTestID, global::System.Int32 jobID, global::System.Int32 serviceItemID, global::System.Byte[] version)
        {
            WellSafetyTest wellSafetyTest = new WellSafetyTest();
            wellSafetyTest.WellSafetyTestID = wellSafetyTestID;
            wellSafetyTest.JobID = jobID;
            wellSafetyTest.ServiceItemID = serviceItemID;
            wellSafetyTest.Version = version;
            return wellSafetyTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WellSafetyTestID
        {
            get
            {
                return _WellSafetyTestID;
            }
            set
            {
                if (_WellSafetyTestID != value)
                {
                    OnWellSafetyTestIDChanging(value);
                    ReportPropertyChanging("WellSafetyTestID");
                    _WellSafetyTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WellSafetyTestID");
                    OnWellSafetyTestIDChanged();
                }
            }
        }
        private global::System.Int32 _WellSafetyTestID;
        partial void OnWellSafetyTestIDChanging(global::System.Int32 value);
        partial void OnWellSafetyTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceItemID
        {
            get
            {
                return _ServiceItemID;
            }
            set
            {
                OnServiceItemIDChanging(value);
                ReportPropertyChanging("ServiceItemID");
                _ServiceItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceItemID");
                OnServiceItemIDChanged();
            }
        }
        private global::System.Int32 _ServiceItemID;
        partial void OnServiceItemIDChanging(global::System.Int32 value);
        partial void OnServiceItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FSR_Num
        {
            get
            {
                return _FSR_Num;
            }
            set
            {
                OnFSR_NumChanging(value);
                ReportPropertyChanging("FSR_Num");
                _FSR_Num = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FSR_Num");
                OnFSR_NumChanged();
            }
        }
        private global::System.String _FSR_Num;
        partial void OnFSR_NumChanging(global::System.String value);
        partial void OnFSR_NumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SSV_SAP_Num
        {
            get
            {
                return _SSV_SAP_Num;
            }
            set
            {
                OnSSV_SAP_NumChanging(value);
                ReportPropertyChanging("SSV_SAP_Num");
                _SSV_SAP_Num = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SSV_SAP_Num");
                OnSSV_SAP_NumChanged();
            }
        }
        private global::System.String _SSV_SAP_Num;
        partial void OnSSV_SAP_NumChanging(global::System.String value);
        partial void OnSSV_SAP_NumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FormDate
        {
            get
            {
                return _FormDate;
            }
            set
            {
                OnFormDateChanging(value);
                ReportPropertyChanging("FormDate");
                _FormDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormDate");
                OnFormDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FormDate;
        partial void OnFormDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFormDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BodyMaterial
        {
            get
            {
                return _BodyMaterial;
            }
            set
            {
                OnBodyMaterialChanging(value);
                ReportPropertyChanging("BodyMaterial");
                _BodyMaterial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BodyMaterial");
                OnBodyMaterialChanged();
            }
        }
        private global::System.String _BodyMaterial;
        partial void OnBodyMaterialChanging(global::System.String value);
        partial void OnBodyMaterialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlugMaterial
        {
            get
            {
                return _PlugMaterial;
            }
            set
            {
                OnPlugMaterialChanging(value);
                ReportPropertyChanging("PlugMaterial");
                _PlugMaterial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlugMaterial");
                OnPlugMaterialChanged();
            }
        }
        private global::System.String _PlugMaterial;
        partial void OnPlugMaterialChanging(global::System.String value);
        partial void OnPlugMaterialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SteamMaterial
        {
            get
            {
                return _SteamMaterial;
            }
            set
            {
                OnSteamMaterialChanging(value);
                ReportPropertyChanging("SteamMaterial");
                _SteamMaterial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SteamMaterial");
                OnSteamMaterialChanged();
            }
        }
        private global::System.String _SteamMaterial;
        partial void OnSteamMaterialChanging(global::System.String value);
        partial void OnSteamMaterialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GateMaterial
        {
            get
            {
                return _GateMaterial;
            }
            set
            {
                OnGateMaterialChanging(value);
                ReportPropertyChanging("GateMaterial");
                _GateMaterial = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GateMaterial");
                OnGateMaterialChanged();
            }
        }
        private global::System.String _GateMaterial;
        partial void OnGateMaterialChanging(global::System.String value);
        partial void OnGateMaterialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortSize
        {
            get
            {
                return _PortSize;
            }
            set
            {
                OnPortSizeChanging(value);
                ReportPropertyChanging("PortSize");
                _PortSize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortSize");
                OnPortSizeChanged();
            }
        }
        private global::System.String _PortSize;
        partial void OnPortSizeChanging(global::System.String value);
        partial void OnPortSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PressClass
        {
            get
            {
                return _PressClass;
            }
            set
            {
                OnPressClassChanging(value);
                ReportPropertyChanging("PressClass");
                _PressClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PressClass");
                OnPressClassChanged();
            }
        }
        private global::System.String _PressClass;
        partial void OnPressClassChanging(global::System.String value);
        partial void OnPressClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActuatorType
        {
            get
            {
                return _ActuatorType;
            }
            set
            {
                OnActuatorTypeChanging(value);
                ReportPropertyChanging("ActuatorType");
                _ActuatorType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActuatorType");
                OnActuatorTypeChanged();
            }
        }
        private global::System.String _ActuatorType;
        partial void OnActuatorTypeChanging(global::System.String value);
        partial void OnActuatorTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActuatorModel
        {
            get
            {
                return _ActuatorModel;
            }
            set
            {
                OnActuatorModelChanging(value);
                ReportPropertyChanging("ActuatorModel");
                _ActuatorModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActuatorModel");
                OnActuatorModelChanged();
            }
        }
        private global::System.String _ActuatorModel;
        partial void OnActuatorModelChanging(global::System.String value);
        partial void OnActuatorModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActuatorSerialNum
        {
            get
            {
                return _ActuatorSerialNum;
            }
            set
            {
                OnActuatorSerialNumChanging(value);
                ReportPropertyChanging("ActuatorSerialNum");
                _ActuatorSerialNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActuatorSerialNum");
                OnActuatorSerialNumChanged();
            }
        }
        private global::System.String _ActuatorSerialNum;
        partial void OnActuatorSerialNumChanging(global::System.String value);
        partial void OnActuatorSerialNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AirSupplyMedium
        {
            get
            {
                return _AirSupplyMedium;
            }
            set
            {
                OnAirSupplyMediumChanging(value);
                ReportPropertyChanging("AirSupplyMedium");
                _AirSupplyMedium = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AirSupplyMedium");
                OnAirSupplyMediumChanged();
            }
        }
        private global::System.String _AirSupplyMedium;
        partial void OnAirSupplyMediumChanging(global::System.String value);
        partial void OnAirSupplyMediumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Condition
        {
            get
            {
                return _Condition;
            }
            set
            {
                OnConditionChanging(value);
                ReportPropertyChanging("Condition");
                _Condition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Condition");
                OnConditionChanged();
            }
        }
        private global::System.String _Condition;
        partial void OnConditionChanging(global::System.String value);
        partial void OnConditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateManufactured
        {
            get
            {
                return _DateManufactured;
            }
            set
            {
                OnDateManufacturedChanging(value);
                ReportPropertyChanging("DateManufactured");
                _DateManufactured = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateManufactured");
                OnDateManufacturedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateManufactured;
        partial void OnDateManufacturedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateManufacturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemLocation
        {
            get
            {
                return _SystemLocation;
            }
            set
            {
                OnSystemLocationChanging(value);
                ReportPropertyChanging("SystemLocation");
                _SystemLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemLocation");
                OnSystemLocationChanged();
            }
        }
        private global::System.String _SystemLocation;
        partial void OnSystemLocationChanging(global::System.String value);
        partial void OnSystemLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ControllerType
        {
            get
            {
                return _ControllerType;
            }
            set
            {
                OnControllerTypeChanging(value);
                ReportPropertyChanging("ControllerType");
                _ControllerType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ControllerType");
                OnControllerTypeChanged();
            }
        }
        private global::System.String _ControllerType;
        partial void OnControllerTypeChanging(global::System.String value);
        partial void OnControllerTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HI
        {
            get
            {
                return _HI;
            }
            set
            {
                OnHIChanging(value);
                ReportPropertyChanging("HI");
                _HI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HI");
                OnHIChanged();
            }
        }
        private global::System.String _HI;
        partial void OnHIChanging(global::System.String value);
        partial void OnHIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LO
        {
            get
            {
                return _LO;
            }
            set
            {
                OnLOChanging(value);
                ReportPropertyChanging("LO");
                _LO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LO");
                OnLOChanged();
            }
        }
        private global::System.String _LO;
        partial void OnLOChanging(global::System.String value);
        partial void OnLOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerWitness
        {
            get
            {
                return _CustomerWitness;
            }
            set
            {
                OnCustomerWitnessChanging(value);
                ReportPropertyChanging("CustomerWitness");
                _CustomerWitness = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerWitness");
                OnCustomerWitnessChanged();
            }
        }
        private global::System.String _CustomerWitness;
        partial void OnCustomerWitnessChanging(global::System.String value);
        partial void OnCustomerWitnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManualOverride
        {
            get
            {
                return _ManualOverride;
            }
            set
            {
                OnManualOverrideChanging(value);
                ReportPropertyChanging("ManualOverride");
                _ManualOverride = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManualOverride");
                OnManualOverrideChanged();
            }
        }
        private global::System.String _ManualOverride;
        partial void OnManualOverrideChanging(global::System.String value);
        partial void OnManualOverrideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TestResultID
        {
            get
            {
                return _TestResultID;
            }
            set
            {
                OnTestResultIDChanging(value);
                ReportPropertyChanging("TestResultID");
                _TestResultID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestResultID");
                OnTestResultIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TestResultID;
        partial void OnTestResultIDChanging(Nullable<global::System.Int32> value);
        partial void OnTestResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private Nullable<global::System.Int32> _ModifiedBy;
        partial void OnModifiedByChanging(Nullable<global::System.Int32> value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Version
        {
            get
            {
                return StructuralObject.GetValidValue(_Version);
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Byte[] _Version;
        partial void OnVersionChanging(global::System.Byte[] value);
        partial void OnVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees", "Employees")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Employees_CreatedBy", "Employees")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "Employees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "Employees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "Employees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("ValvTrak.Model.FK_WellSafetyTests_Employees_CreatedBy", "Employees", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_Jobs", "Jobs")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "Jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "Jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "Jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("ValvTrak.Model.FK_WellSafetyTests_Jobs", "Jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ValvTrak.Model", "FK_WellSafetyTests_ServiceItems", "ServiceItems")]
        public ServiceItem ServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "ServiceItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "ServiceItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ServiceItem> ServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ServiceItem>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "ServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ServiceItem>("ValvTrak.Model.FK_WellSafetyTests_ServiceItems", "ServiceItems", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
