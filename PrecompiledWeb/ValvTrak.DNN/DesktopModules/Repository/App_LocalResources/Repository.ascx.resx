<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="AuthorCopyright.Text">
        <value>Copyright and All rights retained by the Author</value>
    </data>
    <data name="About.Text">
        <value>About...</value>
    </data>
    <data name="AddComment.Text">
        <value>ADD YOUR COMMENT:</value>
    </data>
    <data name="AddContent.Action">
        <value>Add new Item</value>
    </data>
    <data name="AddRating.Text">
        <value>ADD YOUR RATING:</value>
    </data>
    <data name="Author.Text">
        <value>Author</value>
    </data>
    <data name="AuthorEMailTooltip.Text">
        <value />
    </data>
    <data name="by.Text">
        <value>by</value>
    </data>
    <data name="Categories.Text">
        <value>Categories</value>
    </data>
    <data name="ClickNext.Text">
        <value>Click to view the next page</value>
    </data>
    <data name="ClickPrev.Text">
        <value>Click to view the previous page</value>
    </data>
    <data name="ClickToDownload.Text">
        <value>Click to download</value>
    </data>
    <data name="ClickToEdit.Text">
        <value>Click to edit</value>
    </data>
    <data name="ClickToEditComment.Text">
        <value>Click to edit this comment</value>
    </data>
    <data name="ClickToModerate.Text">
        <value>Click to moderate uploads</value>
    </data>
    <data name="ClickToSearch.Text">
        <value>Click to search</value>
    </data>
    <data name="ClickToUpload.Text">
        <value>Click to upload</value>
    </data>
    <data name="ClickToView.Text">
        <value>Click to view</value>
    </data>
    <data name="ClickToViewAddComments.Text">
        <value>Click to view/add comments</value>
    </data>
    <data name="ClickToVisit.Text">
        <value>Click to visit</value>
    </data>
    <data name="Comments.Text">
        <value>COMMENTS</value>
    </data>
    <data name="Date.Text">
        <value>Date</value>
    </data>
    <data name="Description.Text">
        <value>Description</value>
    </data>
    <data name="DownloadButton.Text">
        <value>DOWNLOAD</value>
    </data>
    <data name="Downloads.Text">
        <value>Downloads</value>
    </data>
    <data name="EMail.Text">
        <value>EMail</value>
    </data>
    <data name="File.Text">
        <value>File</value>
    </data>
    <data name="FileSize.Text">
        <value>File size</value>
    </data>
    <data name="FileSync.Text">
        <value>Synchronize Files...</value>
    </data>
    <data name="Hits.Text">
        <value>Hits</value>
    </data>
    <data name="InitialMessage.Text">
        <value>&lt;b&gt;&lt;font color=red&gt;ADMIN:&lt;/font&gt;&lt;/b&gt; Select Repository Settings from the Module Settings drop down menu to set the Repository Description text as well as set the number of objects to be displayed on each page.&lt;br&gt;</value>
    </data>
    <data name="LoadingVideo.Text">
        <value>Loading Microsoft Windows Media Player components...</value>
    </data>
    <data name="ModerateButton.Text">
        <value>MODERATE</value>
    </data>
    <data name="ModuleSettings.Action">
        <value>Repository Options</value>
    </data>
    <data name="NextButton.Text">
        <value>NEXT &gt;</value>
    </data>
    <data name="of.Text">
        <value>of</value>
    </data>
    <data name="on.Text">
        <value>on</value>
    </data>
    <data name="PostCommentButton.Text">
        <value>POST YOUR COMMENT</value>
    </data>
    <data name="PostCommentTooltip.Text">
        <value />
    </data>
    <data name="Posted.Text">
        <value>Posted @</value>
    </data>
    <data name="PostRatingButton.Text">
        <value>POST YOUR RATING</value>
    </data>
    <data name="PostRatingTooltip.Text">
        <value />
    </data>
    <data name="PrevButton.Text">
        <value>&lt; BACK</value>
    </data>
    <data name="Ratings.Text">
        <value>RATING:&amp;nbsp;</value>
    </data>
    <data name="RatingStats1.Text">
        <value>There have been&amp;nbsp;</value>
    </data>
    <data name="RatingStats2.Text">
        <value>&amp;nbsp;votes cast. The average rating is&amp;nbsp;</value>
    </data>
    <data name="RatingTooltip.Text">
        <value>RATING: {0} VOTES: {1} (Click to Rate)</value>
    </data>
    <data name="said.Text">
        <value>said</value>
    </data>
    <data name="Search.Text">
        <value>Search</value>
    </data>
    <data name="SearchButton.Text">
        <value>GO</value>
    </data>
    <data name="SelectCategoryTooltip.Text">
        <value>Select Category</value>
    </data>
    <data name="SelectValueTooltip.Text">
        <value>Select Value</value>
    </data>
    <data name="Size.Text">
        <value>Size</value>
    </data>
    <data name="Sort.Text">
        <value>Sort by</value>
    </data>
    <data name="SortByAuthor.Text">
        <value>Author Name</value>
    </data>
    <data name="SortByDate.Text">
        <value>Date</value>
    </data>
    <data name="SortByDownloads.Text">
        <value>Downloads</value>
    </data>
    <data name="SortByTitle.Text">
        <value>Title</value>
    </data>
    <data name="SortByUserRating.Text">
        <value>User Rating</value>
    </data>
    <data name="Updated.Text">
        <value>Updated</value>
    </data>
    <data name="UploadButton.Text">
        <value>UPLOAD</value>
    </data>
    <data name="UploadedBy.Text">
        <value>Uploaded By</value>
    </data>
    <data name="UserComments.Text">
        <value>USER COMMENTS:</value>
    </data>
    <data name="UserRating.Text">
        <value>USER RATING:</value>
    </data>
    <data name="VisitButton.Text">
        <value>VISIT</value>
    </data>
    <data name="YourComment.Text">
        <value>Your Comment</value>
    </data>
    <data name="YourName.Text">
        <value>Your Name</value>
    </data>
    <data name="ReadArticle.Text">
        <value>read article</value>
    </data>
    <data name="HideArticle.Text">
        <value>close article</value>
    </data>
    <data name="ALL.Text">
        <value>ALL</value>
    </data>
    <data name="PermaLink.Text">
        <value>Permalink</value>
    </data>
    <data name="CommentTagLine.Text">
        <value>on {0}, {1} said&lt;br&gt;{2}</value>
    </data>
    <data name="AllFiles.Text">
        <value>All Items</value>
    </data>
    <data name="Pager.Text">
        <value>Page {0}</value>
    </data>
    <data name="RatedTooltip.Text">
        <value>RATING: {0} VOTES: {1} (You have already posted a Rating for this item)</value>
    </data>
</root>