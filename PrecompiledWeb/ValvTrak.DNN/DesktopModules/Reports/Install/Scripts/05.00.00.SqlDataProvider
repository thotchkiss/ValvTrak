IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}PackageTypes WHERE PackageType='DNN_Reports_DataSource')
BEGIN
	INSERT INTO {databaseOwner}{objectQualifier}PackageTypes(PackageType, Description, SecurityAccessLevel)
	VALUES ('DNN_Reports_DataSource', 'DNN Reports Data Source', 3)
END

IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}PackageTypes WHERE PackageType='DNN_Reports_Visualizer')
BEGIN
	INSERT INTO {databaseOwner}{objectQualifier}PackageTypes(PackageType, Description, SecurityAccessLevel )
	VALUES ('DNN_Reports_Visualizer', 'DNN Reports Visualizer', 3)
END

-- Set Modules to use DNN Data Source by default
INSERT INTO {databaseOwner}{objectQualifier}ModuleSettings(ModuleID, SettingName, SettingValue)
SELECT  M.ModuleID, 'dnn_Reports_DataSource' as SettingName, 'DotNetNuke' as SettingValue
FROM (SELECT ModuleId FROM {databaseOwner}{objectQualifier}ModuleSettings WHERE SettingName = 'dnn_Reports_Query') AS M

-- Set Modules to use DNN Data Source by default
INSERT INTO {databaseOwner}{objectQualifier}ModuleSettings(ModuleID, SettingName, SettingValue)
SELECT  M.ModuleID, 'dnn_Reports_DataSourceClass' as SettingName, 'DotNetNuke.Modules.Reports.DataSources.DotNetNuke.DotNetNukeDataSource' as SettingValue
FROM (SELECT ModuleId FROM {databaseOwner}{objectQualifier}ModuleSettings WHERE SettingName = 'dnn_Reports_Query') AS M

-- Convert query settings
UPDATE {databaseOwner}{objectQualifier}ModuleSettings
SET SettingName = 'dnn_ReportsDS_DotNetNuke_Query'
WHERE SettingName = 'dnn_Reports_Query'