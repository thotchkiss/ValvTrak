/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

IF (SELECT COLUMNPROPERTY( OBJECT_ID('{databaseOwner}{objectQualifier}DocumentsSettings'),'DefaultFolder','AllowsNull')) IS NULL 
ALTER TABLE {databaseOwner}{objectQualifier}DocumentsSettings ADD DefaultFolder nvarchar(2000)
GO

IF (SELECT COLUMNPROPERTY( OBJECT_ID('{databaseOwner}{objectQualifier}DocumentsSettings'),'CategoriesListName','AllowsNull')) IS NULL 
ALTER TABLE {databaseOwner}{objectQualifier}DocumentsSettings ADD CategoriesListName nvarchar(50)
GO

UPDATE {databaseOwner}{objectQualifier}DocumentsSettings SET CategoriesListName='Document Categories' WHERE CategoriesListName IS NULL
GO

IF (SELECT COLUMNPROPERTY( OBJECT_ID('{databaseOwner}{objectQualifier}DocumentsSettings'),'AllowUserSort','AllowsNull')) IS NULL 
ALTER TABLE {databaseOwner}{objectQualifier}DocumentsSettings ADD AllowUserSort bit
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}AddDocumentsSettings') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}AddDocumentsSettings
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}AddDocumentsSettings

@ModuleId          INT,
@ShowTitleLink     BIT,
@SortOrder         nvarchar(2000),
@DisplayColumns    nvarchar(2000),
@UseCategoriesList BIT,
@DefaultFolder     nvarchar(2000),
@CategoriesListName nvarchar(50),
@AllowUserSort     BIT

AS
INSERT INTO {databaseOwner}{objectQualifier}DocumentsSettings (
  ModuleId,
  ShowTitleLink,
  SortOrder,    
  DisplayColumns,
  UseCategoriesList,
  DefaultFolder,
  CategoriesListName,
  AllowUserSort
)
VALUES (
  @ModuleId,
  @ShowTitleLink,
  @SortOrder,    
  @DisplayColumns,
  @UseCategoriesList,
  @DefaultFolder,
  @CategoriesListName,
  @AllowUserSort
)
SELECT @ModuleId
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}UpdateDocumentsSettings') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateDocumentsSettings
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}UpdateDocumentsSettings
@ModuleId          INT,
@ShowTitleLink     BIT,
@SortOrder         nvarchar(2000),
@DisplayColumns    nvarchar(2000),
@UseCategoriesList BIT,
@DefaultFolder     nvarchar(2000),
@CategoriesListName nvarchar(50),
@AllowUserSort     BIT

AS
UPDATE {databaseOwner}{objectQualifier}DocumentsSettings
SET    ShowTitleLink=@ShowTitleLink,
       SortOrder=@SortOrder,    
       DisplayColumns=@DisplayColumns,
       UseCategoriesList=@UseCategoriesList,
       DefaultFolder=@DefaultFolder,
       CategoriesListName=@CategoriesListName,
       AllowUserSort=@AllowUserSort
WHERE  ModuleId = @ModuleId
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocument') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GetDocument
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetDocument

@ItemId   int,
@ModuleId int
AS
SELECT {objectQualifier}Documents.Itemid,
       {objectQualifier}Documents.Moduleid,
       {objectQualifier}Documents.Title,
       {objectQualifier}Documents.Url,
       {objectQualifier}Documents.Category,
       'CreatedByUser' = CreatedByUser.FirstName + ' ' + CreatedByUser.LastName,
       'OwnedByUser' = OwnedByUser.FirstName + ' ' + OwnedByUser.LastName,
       'ModifiedByUser' = ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName,       
       {objectQualifier}Files.Size,
       {objectQualifier}Files.ContentType,
       {objectQualifier}UrlTracking.TrackClicks,
       {objectQualifier}UrlTracking.Clicks,
       {objectQualifier}UrlTracking.NewWindow,
       {objectQualifier}Documents.OwnedByUserID, 
       {objectQualifier}Documents.ModifiedByUserID, 
       {objectQualifier}Documents.ModifiedDate,
       {objectQualifier}Documents.CreatedByUserID, 
       {objectQualifier}Documents.CreatedDate, 
       {objectQualifier}Documents.SortOrderIndex,
       {objectQualifier}Documents.Description
FROM {databaseOwner}{objectQualifier}Documents
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on {objectQualifier}Documents.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on {objectQualifier}Documents.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users  AS ModifiedByUser on {objectQualifier}Documents.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking on {objectQualifier}Documents.URL = {objectQualifier}UrlTracking.Url and {objectQualifier}UrlTracking.ModuleId = @ModuleID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files on {objectQualifier}Documents.URL = 'fileid=' +
convert(varchar,{databaseOwner}{objectQualifier}Files.FileID)
WHERE  {databaseOwner}{objectQualifier}Documents.ItemId = @ItemId
and    {databaseOwner}{objectQualifier}Documents.ModuleId = @ModuleId

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}GetDocuments') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}GetDocuments
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetDocuments

@ModuleId int,
@PortalId int
AS
SELECT {objectQualifier}Documents.ItemId,
        {objectQualifier}Documents.Moduleid,
       {objectQualifier}Documents.Title,
       {objectQualifier}Documents.Url,
       'CreatedByUser' = CreatedByUser.FirstName + ' ' + CreatedByUser.LastName,
       'OwnedByUser' = OwnedByUser.FirstName + ' ' + OwnedByUser.LastName,
       'ModifiedByUser' = ModifiedByUser.FirstName + ' ' + ModifiedByUser.LastName,       
       {objectQualifier}Documents.Category,
       {objectQualifier}Files.Size,
       {objectQualifier}UrlTracking.TrackClicks,
       {objectQualifier}UrlTracking.Clicks,
       {objectQualifier}UrlTracking.NewWindow,
       {objectQualifier}Documents.OwnedByUserID, 
       {objectQualifier}Documents.ModifiedByUserID, 
       {objectQualifier}Documents.ModifiedDate,
       {objectQualifier}Documents.CreatedByUserID, 
       {objectQualifier}Documents.CreatedDate, 
       {objectQualifier}Documents.SortOrderIndex,
       {objectQualifier}Documents.Description
FROM {databaseOwner}{objectQualifier}Documents
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS CreatedByUser on {databaseOwner}{objectQualifier}Documents.CreatedByUserID = CreatedByUser.UserId 
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users AS OwnedByUser on {databaseOwner}{objectQualifier}Documents.OwnedByUserID = OwnedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Users  AS ModifiedByUser on {databaseOwner}{objectQualifier}Documents.ModifiedByUserID = ModifiedByUser.UserId
LEFT OUTER JOIN {databaseOwner}{objectQualifier}Files on {databaseOwner}{objectQualifier}Documents.URL = 'fileid=' + convert(varchar,{databaseOwner}{objectQualifier}Files.FileID)
LEFT OUTER JOIN {databaseOwner}{objectQualifier}UrlTracking on {databaseOwner}{objectQualifier}Documents.URL = {databaseOwner}{objectQualifier}UrlTracking.Url and {databaseOwner}{objectQualifier}UrlTracking.ModuleId = @ModuleID
WHERE  {objectQualifier}Documents.ModuleId = @ModuleId
ORDER by {objectQualifier}Documents.Title
GO
